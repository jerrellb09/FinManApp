[INFO] Scanning for projects...
[INFO] 
[INFO] -----------------------< com.jay.home:FinManApp >-----------------------
[INFO] Building FinManApp 0.0.1-SNAPSHOT
[INFO]   from pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] >>> spring-boot:3.4.3:run (default-cli) > test-compile @ FinManApp >>>
[INFO] 
[INFO] --- resources:3.3.1:resources (default-resources) @ FinManApp ---
[INFO] Copying 3 resources from src/main/resources to target/classes
[INFO] Copying 8 resources from src/main/resources to target/classes
[INFO] 
[INFO] --- compiler:3.13.0:compile (default-compile) @ FinManApp ---
[INFO] Nothing to compile - all classes are up to date.
[INFO] 
[INFO] --- resources:3.3.1:testResources (default-testResources) @ FinManApp ---
[INFO] skip non existing resourceDirectory /Users/jerrell/repos/FinManApp/src/test/resources
[INFO] 
[INFO] --- compiler:3.13.0:testCompile (default-testCompile) @ FinManApp ---
[INFO] Recompiling the module because of changed source code.
[INFO] Compiling 3 source files with javac [debug parameters release 21] to target/test-classes
[INFO] 
[INFO] <<< spring-boot:3.4.3:run (default-cli) < test-compile @ FinManApp <<<
[INFO] 
[INFO] 
[INFO] --- spring-boot:3.4.3:run (default-cli) @ FinManApp ---
[INFO] Attaching agents: []

  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/

 :: Spring Boot ::                (v3.4.3)

2025-05-21T21:51:40.916-04:00  INFO 86852 --- [FinManApp] [           main] c.j.home.finmanapp.FinManAppApplication  : Starting FinManAppApplication using Java 21.0.6 with PID 86852 (/Users/jerrell/repos/FinManApp/target/classes started by jerrell in /Users/jerrell/repos/FinManApp)
2025-05-21T21:51:40.917-04:00 DEBUG 86852 --- [FinManApp] [           main] c.j.home.finmanapp.FinManAppApplication  : Running with Spring Boot v3.4.3, Spring v6.2.3
2025-05-21T21:51:40.917-04:00  INFO 86852 --- [FinManApp] [           main] c.j.home.finmanapp.FinManAppApplication  : No active profile set, falling back to 1 default profile: "default"
{"@timestamp":"2025-05-21T21:51:40.916685-04:00","@version":"1","message":"Starting FinManAppApplication using Java 21.0.6 with PID 86852 (/Users/jerrell/repos/FinManApp/target/classes started by jerrell in /Users/jerrell/repos/FinManApp)","logger_name":"com.jay.home.finmanapp.FinManAppApplication","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T21:51:40.917425-04:00","@version":"1","message":"Running with Spring Boot v3.4.3, Spring v6.2.3","logger_name":"com.jay.home.finmanapp.FinManAppApplication","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-05-21T21:51:40.91765-04:00","@version":"1","message":"No active profile set, falling back to 1 default profile: \"default\"","logger_name":"com.jay.home.finmanapp.FinManAppApplication","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T21:51:41.204551-04:00","@version":"1","message":"Bootstrapping Spring Data JPA repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"main","level":"INFO","level_value":20000}
2025-05-21T21:51:41.204-04:00  INFO 86852 --- [FinManApp] [           main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
{"@timestamp":"2025-05-21T21:51:41.22947-04:00","@version":"1","message":"Finished Spring Data repository scanning in 21 ms. Found 7 JPA repository interfaces.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"main","level":"INFO","level_value":20000}
2025-05-21T21:51:41.229-04:00  INFO 86852 --- [FinManApp] [           main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 21 ms. Found 7 JPA repository interfaces.
{"@timestamp":"2025-05-21T21:51:41.352995-04:00","@version":"1","message":"Bean 'datadogConfig' of type [com.jay.home.finmanapp.config.DatadogConfig$$SpringCGLIB$$0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected/applied to a currently created BeanPostProcessor [projectingArgumentResolverBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies/advisors. If this bean does not have to be post-processed, declare it with ROLE_INFRASTRUCTURE.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"main","level":"WARN","level_value":30000}
2025-05-21T21:51:41.352-04:00  WARN 86852 --- [FinManApp] [           main] trationDelegate$BeanPostProcessorChecker : Bean 'datadogConfig' of type [com.jay.home.finmanapp.config.DatadogConfig$$SpringCGLIB$$0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected/applied to a currently created BeanPostProcessor [projectingArgumentResolverBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies/advisors. If this bean does not have to be post-processed, declare it with ROLE_INFRASTRUCTURE.
2025-05-21T21:51:41.355-04:00  WARN 86852 --- [FinManApp] [           main] trationDelegate$BeanPostProcessorChecker : Bean 'controllerTracing' of type [org.springframework.aop.support.DefaultPointcutAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected/applied to a currently created BeanPostProcessor [projectingArgumentResolverBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies/advisors. If this bean does not have to be post-processed, declare it with ROLE_INFRASTRUCTURE.
{"@timestamp":"2025-05-21T21:51:41.355522-04:00","@version":"1","message":"Bean 'controllerTracing' of type [org.springframework.aop.support.DefaultPointcutAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected/applied to a currently created BeanPostProcessor [projectingArgumentResolverBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies/advisors. If this bean does not have to be post-processed, declare it with ROLE_INFRASTRUCTURE.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"main","level":"WARN","level_value":30000}
2025-05-21T21:51:41.355-04:00  WARN 86852 --- [FinManApp] [           main] trationDelegate$BeanPostProcessorChecker : Bean 'serviceTracing' of type [org.springframework.aop.support.DefaultPointcutAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected/applied to a currently created BeanPostProcessor [projectingArgumentResolverBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies/advisors. If this bean does not have to be post-processed, declare it with ROLE_INFRASTRUCTURE.
{"@timestamp":"2025-05-21T21:51:41.355831-04:00","@version":"1","message":"Bean 'serviceTracing' of type [org.springframework.aop.support.DefaultPointcutAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected/applied to a currently created BeanPostProcessor [projectingArgumentResolverBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies/advisors. If this bean does not have to be post-processed, declare it with ROLE_INFRASTRUCTURE.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2025-05-21T21:51:41.508362-04:00","@version":"1","message":"Tomcat initialized with port 8080 (http)","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"main","level":"INFO","level_value":20000}
2025-05-21T21:51:41.508-04:00  INFO 86852 --- [FinManApp] [           main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
{"@timestamp":"2025-05-21T21:51:41.513984-04:00","@version":"1","message":"Starting service [Tomcat]","logger_name":"org.apache.catalina.core.StandardService","thread_name":"main","level":"INFO","level_value":20000}
2025-05-21T21:51:41.513-04:00  INFO 86852 --- [FinManApp] [           main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
{"@timestamp":"2025-05-21T21:51:41.514145-04:00","@version":"1","message":"Starting Servlet engine: [Apache Tomcat/10.1.36]","logger_name":"org.apache.catalina.core.StandardEngine","thread_name":"main","level":"INFO","level_value":20000}
2025-05-21T21:51:41.514-04:00  INFO 86852 --- [FinManApp] [           main] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.36]
{"@timestamp":"2025-05-21T21:51:41.533624-04:00","@version":"1","message":"Initializing Spring embedded WebApplicationContext","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread_name":"main","level":"INFO","level_value":20000}
2025-05-21T21:51:41.533-04:00  INFO 86852 --- [FinManApp] [           main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
{"@timestamp":"2025-05-21T21:51:41.534009-04:00","@version":"1","message":"Root WebApplicationContext: initialization completed in 601 ms","logger_name":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext","thread_name":"main","level":"INFO","level_value":20000}
2025-05-21T21:51:41.534-04:00  INFO 86852 --- [FinManApp] [           main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 601 ms
2025-05-21T21:51:41.586-04:00  INFO 86852 --- [FinManApp] [           main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
{"@timestamp":"2025-05-21T21:51:41.586831-04:00","@version":"1","message":"HikariPool-1 - Starting...","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"main","level":"INFO","level_value":20000}
2025-05-21T21:51:44.601-04:00  INFO 86852 --- [FinManApp] [           main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@3ad847f8
{"@timestamp":"2025-05-21T21:51:44.601851-04:00","@version":"1","message":"HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@3ad847f8","logger_name":"com.zaxxer.hikari.pool.HikariPool","thread_name":"main","level":"INFO","level_value":20000}
2025-05-21T21:51:44.604-04:00  INFO 86852 --- [FinManApp] [           main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
{"@timestamp":"2025-05-21T21:51:44.604912-04:00","@version":"1","message":"HikariPool-1 - Start completed.","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T21:51:44.649753-04:00","@version":"1","message":"HHH000204: Processing PersistenceUnitInfo [name: default]","logger_name":"org.hibernate.jpa.internal.util.LogHelper","thread_name":"main","level":"INFO","level_value":20000}
2025-05-21T21:51:44.649-04:00  INFO 86852 --- [FinManApp] [           main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
{"@timestamp":"2025-05-21T21:51:44.67325-04:00","@version":"1","message":"HHH000412: Hibernate ORM core version 6.6.8.Final","logger_name":"org.hibernate.Version","thread_name":"main","level":"INFO","level_value":20000}
2025-05-21T21:51:44.673-04:00  INFO 86852 --- [FinManApp] [           main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.6.8.Final
{"@timestamp":"2025-05-21T21:51:44.687832-04:00","@version":"1","message":"HHH000026: Second-level cache disabled","logger_name":"org.hibernate.cache.internal.RegionFactoryInitiator","thread_name":"main","level":"INFO","level_value":20000}
2025-05-21T21:51:44.687-04:00  INFO 86852 --- [FinManApp] [           main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
{"@timestamp":"2025-05-21T21:51:44.795524-04:00","@version":"1","message":"No LoadTimeWeaver setup: ignoring JPA class transformer","logger_name":"org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo","thread_name":"main","level":"INFO","level_value":20000}
2025-05-21T21:51:44.795-04:00  INFO 86852 --- [FinManApp] [           main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
{"@timestamp":"2025-05-21T21:51:44.81812-04:00","@version":"1","message":"HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)","logger_name":"org.hibernate.orm.deprecation","thread_name":"main","level":"WARN","level_value":30000}
2025-05-21T21:51:44.818-04:00  WARN 86852 --- [FinManApp] [           main] org.hibernate.orm.deprecation            : HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-05-21T21:51:44.823-04:00  INFO 86852 --- [FinManApp] [           main] org.hibernate.orm.connections.pooling    : HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 16.9
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
{"@timestamp":"2025-05-21T21:51:44.823134-04:00","@version":"1","message":"HHH10001005: Database info:\n\tDatabase JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']\n\tDatabase driver: undefined/unknown\n\tDatabase version: 16.9\n\tAutocommit mode: undefined/unknown\n\tIsolation level: undefined/unknown\n\tMinimum pool size: undefined/unknown\n\tMaximum pool size: undefined/unknown","logger_name":"org.hibernate.orm.connections.pooling","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T21:51:45.241588-04:00","@version":"1","message":"HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)","logger_name":"org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator","thread_name":"main","level":"INFO","level_value":20000}
2025-05-21T21:51:45.241-04:00  INFO 86852 --- [FinManApp] [           main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
{"@timestamp":"2025-05-21T21:51:45.246671-04:00","@version":"1","message":"\n    set client_min_messages = WARNING","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
2025-05-21T21:51:45.246-04:00 DEBUG 86852 --- [FinManApp] [           main] org.hibernate.SQL                        : 
    set client_min_messages = WARNING
Hibernate: 
    set client_min_messages = WARNING
{"@timestamp":"2025-05-21T21:51:45.247283-04:00","@version":"1","message":"HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@6764201e] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.","logger_name":"org.hibernate.orm.connections.access","thread_name":"main","level":"INFO","level_value":20000}
2025-05-21T21:51:45.247-04:00  INFO 86852 --- [FinManApp] [           main] org.hibernate.orm.connections.access     : HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@6764201e] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
{"@timestamp":"2025-05-21T21:51:45.24816-04:00","@version":"1","message":"\n    alter table if exists accounts \n       drop constraint if exists FKnjuop33mo69pd79ctplkck40n","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
2025-05-21T21:51:45.248-04:00 DEBUG 86852 --- [FinManApp] [           main] org.hibernate.SQL                        : 
    alter table if exists accounts 
       drop constraint if exists FKnjuop33mo69pd79ctplkck40n
Hibernate: 
    alter table if exists accounts 
       drop constraint if exists FKnjuop33mo69pd79ctplkck40n
{"@timestamp":"2025-05-21T21:51:45.251443-04:00","@version":"1","message":"\n    alter table if exists bills \n       drop constraint if exists FKn4my8n8xmvieiq3dqtdtggx1e","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
2025-05-21T21:51:45.251-04:00 DEBUG 86852 --- [FinManApp] [           main] org.hibernate.SQL                        : 
    alter table if exists bills 
       drop constraint if exists FKn4my8n8xmvieiq3dqtdtggx1e
Hibernate: 
    alter table if exists bills 
       drop constraint if exists FKn4my8n8xmvieiq3dqtdtggx1e
{"@timestamp":"2025-05-21T21:51:45.252944-04:00","@version":"1","message":"\n    alter table if exists bills \n       drop constraint if exists FKk8vs7ac9xknv5xp18pdiehpp1","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
2025-05-21T21:51:45.252-04:00 DEBUG 86852 --- [FinManApp] [           main] org.hibernate.SQL                        : 
    alter table if exists bills 
       drop constraint if exists FKk8vs7ac9xknv5xp18pdiehpp1
Hibernate: 
    alter table if exists bills 
       drop constraint if exists FKk8vs7ac9xknv5xp18pdiehpp1
{"@timestamp":"2025-05-21T21:51:45.254339-04:00","@version":"1","message":"\n    alter table if exists budgets \n       drop constraint if exists FKn7qib00712y8dwelmqfwis6ka","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
2025-05-21T21:51:45.254-04:00 DEBUG 86852 --- [FinManApp] [           main] org.hibernate.SQL                        : 
    alter table if exists budgets 
       drop constraint if exists FKn7qib00712y8dwelmqfwis6ka
Hibernate: 
    alter table if exists budgets 
       drop constraint if exists FKn7qib00712y8dwelmqfwis6ka
{"@timestamp":"2025-05-21T21:51:45.255526-04:00","@version":"1","message":"\n    alter table if exists budgets \n       drop constraint if exists FKln0tm5tgf3f9q3sp9sa5m8m7b","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
2025-05-21T21:51:45.255-04:00 DEBUG 86852 --- [FinManApp] [           main] org.hibernate.SQL                        : 
    alter table if exists budgets 
       drop constraint if exists FKln0tm5tgf3f9q3sp9sa5m8m7b
Hibernate: 
    alter table if exists budgets 
       drop constraint if exists FKln0tm5tgf3f9q3sp9sa5m8m7b
{"@timestamp":"2025-05-21T21:51:45.256554-04:00","@version":"1","message":"\n    alter table if exists notifications \n       drop constraint if exists FK2mxykr27tc748bjcw3d7wtdid","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
2025-05-21T21:51:45.256-04:00 DEBUG 86852 --- [FinManApp] [           main] org.hibernate.SQL                        : 
    alter table if exists notifications 
       drop constraint if exists FK2mxykr27tc748bjcw3d7wtdid
Hibernate: 
    alter table if exists notifications 
       drop constraint if exists FK2mxykr27tc748bjcw3d7wtdid
{"@timestamp":"2025-05-21T21:51:45.25778-04:00","@version":"1","message":"\n    alter table if exists notifications \n       drop constraint if exists FK9y21adhxn0ayjhfocscqox7bh","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
2025-05-21T21:51:45.257-04:00 DEBUG 86852 --- [FinManApp] [           main] org.hibernate.SQL                        : 
    alter table if exists notifications 
       drop constraint if exists FK9y21adhxn0ayjhfocscqox7bh
Hibernate: 
    alter table if exists notifications 
       drop constraint if exists FK9y21adhxn0ayjhfocscqox7bh
{"@timestamp":"2025-05-21T21:51:45.258753-04:00","@version":"1","message":"\n    alter table if exists transactions \n       drop constraint if exists FK20w7wsg13u9srbq3bd7chfxdh","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
2025-05-21T21:51:45.258-04:00 DEBUG 86852 --- [FinManApp] [           main] org.hibernate.SQL                        : 
    alter table if exists transactions 
       drop constraint if exists FK20w7wsg13u9srbq3bd7chfxdh
Hibernate: 
    alter table if exists transactions 
       drop constraint if exists FK20w7wsg13u9srbq3bd7chfxdh
{"@timestamp":"2025-05-21T21:51:45.259573-04:00","@version":"1","message":"\n    alter table if exists transactions \n       drop constraint if exists FKsqqi7sneo04kast0o138h19mv","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
2025-05-21T21:51:45.259-04:00 DEBUG 86852 --- [FinManApp] [           main] org.hibernate.SQL                        : 
    alter table if exists transactions 
       drop constraint if exists FKsqqi7sneo04kast0o138h19mv
Hibernate: 
    alter table if exists transactions 
       drop constraint if exists FKsqqi7sneo04kast0o138h19mv
{"@timestamp":"2025-05-21T21:51:45.260345-04:00","@version":"1","message":"\n    drop table if exists accounts cascade","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
2025-05-21T21:51:45.260-04:00 DEBUG 86852 --- [FinManApp] [           main] org.hibernate.SQL                        : 
    drop table if exists accounts cascade
Hibernate: 
    drop table if exists accounts cascade
{"@timestamp":"2025-05-21T21:51:45.263596-04:00","@version":"1","message":"\n    drop table if exists bills cascade","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
2025-05-21T21:51:45.263-04:00 DEBUG 86852 --- [FinManApp] [           main] org.hibernate.SQL                        : 
    drop table if exists bills cascade
Hibernate: 
    drop table if exists bills cascade
2025-05-21T21:51:45.265-04:00 DEBUG 86852 --- [FinManApp] [           main] org.hibernate.SQL                        : 
    drop table if exists budgets cascade
{"@timestamp":"2025-05-21T21:51:45.265612-04:00","@version":"1","message":"\n    drop table if exists budgets cascade","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
Hibernate: 
    drop table if exists budgets cascade
2025-05-21T21:51:45.267-04:00 DEBUG 86852 --- [FinManApp] [           main] org.hibernate.SQL                        : 
    drop table if exists categories cascade
{"@timestamp":"2025-05-21T21:51:45.267666-04:00","@version":"1","message":"\n    drop table if exists categories cascade","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
Hibernate: 
    drop table if exists categories cascade
2025-05-21T21:51:45.269-04:00 DEBUG 86852 --- [FinManApp] [           main] org.hibernate.SQL                        : 
    drop table if exists notifications cascade
{"@timestamp":"2025-05-21T21:51:45.269785-04:00","@version":"1","message":"\n    drop table if exists notifications cascade","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
Hibernate: 
    drop table if exists notifications cascade
2025-05-21T21:51:45.271-04:00 DEBUG 86852 --- [FinManApp] [           main] org.hibernate.SQL                        : 
    drop table if exists transactions cascade
Hibernate: 
    drop table if exists transactions cascade
{"@timestamp":"2025-05-21T21:51:45.271141-04:00","@version":"1","message":"\n    drop table if exists transactions cascade","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-05-21T21:51:45.272962-04:00","@version":"1","message":"\n    drop table if exists users cascade","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
2025-05-21T21:51:45.272-04:00 DEBUG 86852 --- [FinManApp] [           main] org.hibernate.SQL                        : 
    drop table if exists users cascade
Hibernate: 
    drop table if exists users cascade
{"@timestamp":"2025-05-21T21:51:45.282666-04:00","@version":"1","message":"\n    create table accounts (\n        balance numeric(38,2) not null,\n        id bigint generated by default as identity,\n        last_synced timestamp(6) not null,\n        user_id bigint not null,\n        access_token varchar(255) not null,\n        account_id varchar(255) not null,\n        institution_id varchar(255) not null,\n        institution_name varchar(255) not null,\n        name varchar(255) not null,\n        type varchar(255) not null,\n        primary key (id)\n    )","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
2025-05-21T21:51:45.282-04:00 DEBUG 86852 --- [FinManApp] [           main] org.hibernate.SQL                        : 
    create table accounts (
        balance numeric(38,2) not null,
        id bigint generated by default as identity,
        last_synced timestamp(6) not null,
        user_id bigint not null,
        access_token varchar(255) not null,
        account_id varchar(255) not null,
        institution_id varchar(255) not null,
        institution_name varchar(255) not null,
        name varchar(255) not null,
        type varchar(255) not null,
        primary key (id)
    )
Hibernate: 
    create table accounts (
        balance numeric(38,2) not null,
        id bigint generated by default as identity,
        last_synced timestamp(6) not null,
        user_id bigint not null,
        access_token varchar(255) not null,
        account_id varchar(255) not null,
        institution_id varchar(255) not null,
        institution_name varchar(255) not null,
        name varchar(255) not null,
        type varchar(255) not null,
        primary key (id)
    )
2025-05-21T21:51:45.282-04:00  INFO 86852 --- [FinManApp] [           main] org.hibernate.orm.connections.access     : HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@3bf306d3] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
{"@timestamp":"2025-05-21T21:51:45.282958-04:00","@version":"1","message":"HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@3bf306d3] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.","logger_name":"org.hibernate.orm.connections.access","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T21:51:45.299309-04:00","@version":"1","message":"\n    create table bills (\n        amount numeric(38,2) not null,\n        auto_pay boolean,\n        due_day integer not null,\n        is_paid boolean not null,\n        is_recurring boolean not null,\n        category_id bigint,\n        id bigint generated by default as identity,\n        user_id bigint not null,\n        description varchar(255),\n        name varchar(255) not null,\n        recurring_period varchar(255),\n        primary key (id)\n    )","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
2025-05-21T21:51:45.299-04:00 DEBUG 86852 --- [FinManApp] [           main] org.hibernate.SQL                        : 
    create table bills (
        amount numeric(38,2) not null,
        auto_pay boolean,
        due_day integer not null,
        is_paid boolean not null,
        is_recurring boolean not null,
        category_id bigint,
        id bigint generated by default as identity,
        user_id bigint not null,
        description varchar(255),
        name varchar(255) not null,
        recurring_period varchar(255),
        primary key (id)
    )
Hibernate: 
    create table bills (
        amount numeric(38,2) not null,
        auto_pay boolean,
        due_day integer not null,
        is_paid boolean not null,
        is_recurring boolean not null,
        category_id bigint,
        id bigint generated by default as identity,
        user_id bigint not null,
        description varchar(255),
        name varchar(255) not null,
        recurring_period varchar(255),
        primary key (id)
    )
2025-05-21T21:51:45.304-04:00 DEBUG 86852 --- [FinManApp] [           main] org.hibernate.SQL                        : 
    create table budgets (
        amount numeric(38,2) not null,
        end_date date,
        start_date date not null,
        warning_threshold numeric(38,2) not null,
        category_id bigint,
        id bigint generated by default as identity,
        user_id bigint not null,
        name varchar(255) not null,
        period varchar(255) not null,
        primary key (id)
    )
Hibernate: 
    create table budgets (
        amount numeric(38,2) not null,
        end_date date,
        start_date date not null,
        warning_threshold numeric(38,2) not null,
        category_id bigint,
        id bigint generated by default as identity,
        user_id bigint not null,
        name varchar(255) not null,
        period varchar(255) not null,
        primary key (id)
    )
{"@timestamp":"2025-05-21T21:51:45.304353-04:00","@version":"1","message":"\n    create table budgets (\n        amount numeric(38,2) not null,\n        end_date date,\n        start_date date not null,\n        warning_threshold numeric(38,2) not null,\n        category_id bigint,\n        id bigint generated by default as identity,\n        user_id bigint not null,\n        name varchar(255) not null,\n        period varchar(255) not null,\n        primary key (id)\n    )","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
2025-05-21T21:51:45.316-04:00 DEBUG 86852 --- [FinManApp] [           main] org.hibernate.SQL                        : 
    create table categories (
        id bigint generated by default as identity,
        description varchar(255),
        icon_url varchar(255),
        name varchar(255) not null unique,
        primary key (id)
    )
Hibernate: 
    create table categories (
        id bigint generated by default as identity,
        description varchar(255),
        icon_url varchar(255),
        name varchar(255) not null unique,
        primary key (id)
    )
{"@timestamp":"2025-05-21T21:51:45.316711-04:00","@version":"1","message":"\n    create table categories (\n        id bigint generated by default as identity,\n        description varchar(255),\n        icon_url varchar(255),\n        name varchar(255) not null unique,\n        primary key (id)\n    )","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
2025-05-21T21:51:45.341-04:00 DEBUG 86852 --- [FinManApp] [           main] org.hibernate.SQL                        : 
    create table notifications (
        is_read boolean not null,
        budget_id bigint not null,
        id bigint generated by default as identity,
        sent_at timestamp(6) not null,
        user_id bigint not null,
        message varchar(255) not null,
        primary key (id)
    )
Hibernate: 
    create table notifications (
        is_read boolean not null,
        budget_id bigint not null,
        id bigint generated by default as identity,
        sent_at timestamp(6) not null,
        user_id bigint not null,
        message varchar(255) not null,
        primary key (id)
    )
{"@timestamp":"2025-05-21T21:51:45.341753-04:00","@version":"1","message":"\n    create table notifications (\n        is_read boolean not null,\n        budget_id bigint not null,\n        id bigint generated by default as identity,\n        sent_at timestamp(6) not null,\n        user_id bigint not null,\n        message varchar(255) not null,\n        primary key (id)\n    )","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
2025-05-21T21:51:45.344-04:00 DEBUG 86852 --- [FinManApp] [           main] org.hibernate.SQL                        : 
    create table transactions (
        amount numeric(38,2) not null,
        is_manual_entry boolean,
        account_id bigint not null,
        category_id bigint,
        date timestamp(6) not null,
        id bigint generated by default as identity,
        description varchar(255) not null,
        transaction_id varchar(255) not null,
        primary key (id)
    )
Hibernate: 
    create table transactions (
        amount numeric(38,2) not null,
        is_manual_entry boolean,
        account_id bigint not null,
        category_id bigint,
        date timestamp(6) not null,
        id bigint generated by default as identity,
        description varchar(255) not null,
        transaction_id varchar(255) not null,
        primary key (id)
    )
{"@timestamp":"2025-05-21T21:51:45.344149-04:00","@version":"1","message":"\n    create table transactions (\n        amount numeric(38,2) not null,\n        is_manual_entry boolean,\n        account_id bigint not null,\n        category_id bigint,\n        date timestamp(6) not null,\n        id bigint generated by default as identity,\n        description varchar(255) not null,\n        transaction_id varchar(255) not null,\n        primary key (id)\n    )","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
2025-05-21T21:51:45.347-04:00 DEBUG 86852 --- [FinManApp] [           main] org.hibernate.SQL                        : 
    create table users (
        is_demo boolean not null,
        monthly_income numeric(38,2),
        payday_day integer,
        id bigint generated by default as identity,
        email varchar(255) not null unique,
        first_name varchar(255) not null,
        last_name varchar(255) not null,
        password varchar(255) not null,
        primary key (id)
    )
Hibernate: 
    create table users (
        is_demo boolean not null,
        monthly_income numeric(38,2),
        payday_day integer,
        id bigint generated by default as identity,
        email varchar(255) not null unique,
        first_name varchar(255) not null,
        last_name varchar(255) not null,
        password varchar(255) not null,
        primary key (id)
    )
{"@timestamp":"2025-05-21T21:51:45.347799-04:00","@version":"1","message":"\n    create table users (\n        is_demo boolean not null,\n        monthly_income numeric(38,2),\n        payday_day integer,\n        id bigint generated by default as identity,\n        email varchar(255) not null unique,\n        first_name varchar(255) not null,\n        last_name varchar(255) not null,\n        password varchar(255) not null,\n        primary key (id)\n    )","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
2025-05-21T21:51:45.352-04:00 DEBUG 86852 --- [FinManApp] [           main] org.hibernate.SQL                        : 
    alter table if exists accounts 
       add constraint FKnjuop33mo69pd79ctplkck40n 
       foreign key (user_id) 
       references users
Hibernate: 
    alter table if exists accounts 
       add constraint FKnjuop33mo69pd79ctplkck40n 
       foreign key (user_id) 
       references users
{"@timestamp":"2025-05-21T21:51:45.352202-04:00","@version":"1","message":"\n    alter table if exists accounts \n       add constraint FKnjuop33mo69pd79ctplkck40n \n       foreign key (user_id) \n       references users","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
2025-05-21T21:51:45.354-04:00 DEBUG 86852 --- [FinManApp] [           main] org.hibernate.SQL                        : 
    alter table if exists bills 
       add constraint FKn4my8n8xmvieiq3dqtdtggx1e 
       foreign key (category_id) 
       references categories
Hibernate: 
    alter table if exists bills 
       add constraint FKn4my8n8xmvieiq3dqtdtggx1e 
       foreign key (category_id) 
       references categories
{"@timestamp":"2025-05-21T21:51:45.354601-04:00","@version":"1","message":"\n    alter table if exists bills \n       add constraint FKn4my8n8xmvieiq3dqtdtggx1e \n       foreign key (category_id) \n       references categories","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
2025-05-21T21:51:45.355-04:00 DEBUG 86852 --- [FinManApp] [           main] org.hibernate.SQL                        : 
    alter table if exists bills 
       add constraint FKk8vs7ac9xknv5xp18pdiehpp1 
       foreign key (user_id) 
       references users
Hibernate: 
    alter table if exists bills 
       add constraint FKk8vs7ac9xknv5xp18pdiehpp1 
       foreign key (user_id) 
       references users
{"@timestamp":"2025-05-21T21:51:45.355931-04:00","@version":"1","message":"\n    alter table if exists bills \n       add constraint FKk8vs7ac9xknv5xp18pdiehpp1 \n       foreign key (user_id) \n       references users","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
2025-05-21T21:51:45.356-04:00 DEBUG 86852 --- [FinManApp] [           main] org.hibernate.SQL                        : 
    alter table if exists budgets 
       add constraint FKn7qib00712y8dwelmqfwis6ka 
       foreign key (category_id) 
       references categories
{"@timestamp":"2025-05-21T21:51:45.356887-04:00","@version":"1","message":"\n    alter table if exists budgets \n       add constraint FKn7qib00712y8dwelmqfwis6ka \n       foreign key (category_id) \n       references categories","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
Hibernate: 
    alter table if exists budgets 
       add constraint FKn7qib00712y8dwelmqfwis6ka 
       foreign key (category_id) 
       references categories
2025-05-21T21:51:45.358-04:00 DEBUG 86852 --- [FinManApp] [           main] org.hibernate.SQL                        : 
    alter table if exists budgets 
       add constraint FKln0tm5tgf3f9q3sp9sa5m8m7b 
       foreign key (user_id) 
       references users
{"@timestamp":"2025-05-21T21:51:45.358043-04:00","@version":"1","message":"\n    alter table if exists budgets \n       add constraint FKln0tm5tgf3f9q3sp9sa5m8m7b \n       foreign key (user_id) \n       references users","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
Hibernate: 
    alter table if exists budgets 
       add constraint FKln0tm5tgf3f9q3sp9sa5m8m7b 
       foreign key (user_id) 
       references users
2025-05-21T21:51:45.358-04:00 DEBUG 86852 --- [FinManApp] [           main] org.hibernate.SQL                        : 
    alter table if exists notifications 
       add constraint FK2mxykr27tc748bjcw3d7wtdid 
       foreign key (budget_id) 
       references budgets
Hibernate: 
    alter table if exists notifications 
       add constraint FK2mxykr27tc748bjcw3d7wtdid 
       foreign key (budget_id) 
       references budgets
{"@timestamp":"2025-05-21T21:51:45.358829-04:00","@version":"1","message":"\n    alter table if exists notifications \n       add constraint FK2mxykr27tc748bjcw3d7wtdid \n       foreign key (budget_id) \n       references budgets","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
2025-05-21T21:51:45.359-04:00 DEBUG 86852 --- [FinManApp] [           main] org.hibernate.SQL                        : 
    alter table if exists notifications 
       add constraint FK9y21adhxn0ayjhfocscqox7bh 
       foreign key (user_id) 
       references users
Hibernate: 
    alter table if exists notifications 
       add constraint FK9y21adhxn0ayjhfocscqox7bh 
       foreign key (user_id) 
       references users
{"@timestamp":"2025-05-21T21:51:45.359621-04:00","@version":"1","message":"\n    alter table if exists notifications \n       add constraint FK9y21adhxn0ayjhfocscqox7bh \n       foreign key (user_id) \n       references users","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
2025-05-21T21:51:45.360-04:00 DEBUG 86852 --- [FinManApp] [           main] org.hibernate.SQL                        : 
    alter table if exists transactions 
       add constraint FK20w7wsg13u9srbq3bd7chfxdh 
       foreign key (account_id) 
       references accounts
{"@timestamp":"2025-05-21T21:51:45.360224-04:00","@version":"1","message":"\n    alter table if exists transactions \n       add constraint FK20w7wsg13u9srbq3bd7chfxdh \n       foreign key (account_id) \n       references accounts","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
Hibernate: 
    alter table if exists transactions 
       add constraint FK20w7wsg13u9srbq3bd7chfxdh 
       foreign key (account_id) 
       references accounts
2025-05-21T21:51:45.361-04:00 DEBUG 86852 --- [FinManApp] [           main] org.hibernate.SQL                        : 
    alter table if exists transactions 
       add constraint FKsqqi7sneo04kast0o138h19mv 
       foreign key (category_id) 
       references categories
Hibernate: 
    alter table if exists transactions 
       add constraint FKsqqi7sneo04kast0o138h19mv 
       foreign key (category_id) 
       references categories
{"@timestamp":"2025-05-21T21:51:45.361231-04:00","@version":"1","message":"\n    alter table if exists transactions \n       add constraint FKsqqi7sneo04kast0o138h19mv \n       foreign key (category_id) \n       references categories","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-05-21T21:51:45.363952-04:00","@version":"1","message":"Initialized JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"main","level":"INFO","level_value":20000}
2025-05-21T21:51:45.363-04:00  INFO 86852 --- [FinManApp] [           main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
JwtUtils initialized with secret key
{"@timestamp":"2025-05-21T21:51:45.545852-04:00","@version":"1","message":"Filter 'corsFilter' configured for use","logger_name":"org.springframework.web.filter.CorsFilter","thread_name":"main","level":"DEBUG","level_value":10000}
2025-05-21T21:51:45.545-04:00 DEBUG 86852 --- [FinManApp] [           main] o.springframework.web.filter.CorsFilter  : Filter 'corsFilter' configured for use
{"@timestamp":"2025-05-21T21:51:45.546084-04:00","@version":"1","message":"Filter 'jwtFilter' configured for use","logger_name":"com.jay.home.finmanapp.security.JwtFilter","thread_name":"main","level":"DEBUG","level_value":10000}
2025-05-21T21:51:45.546-04:00 DEBUG 86852 --- [FinManApp] [           main] c.jay.home.finmanapp.security.JwtFilter  : Filter 'jwtFilter' configured for use
2025-05-21T21:51:45.577-04:00  INFO 86852 --- [FinManApp] [           main] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
{"@timestamp":"2025-05-21T21:51:45.577759-04:00","@version":"1","message":"Hibernate is in classpath; If applicable, HQL parser will be used.","logger_name":"org.springframework.data.jpa.repository.query.QueryEnhancerFactory","thread_name":"main","level":"INFO","level_value":20000}
Database name extracted from URL: finmanapp
Checking if PostgreSQL database exists: finmanapp
Connected to database: finmanapp
Database already exists, no need to create it
{"@timestamp":"2025-05-21T21:51:46.089247-04:00","@version":"1","message":"spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning","logger_name":"org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration","thread_name":"main","level":"WARN","level_value":30000}
2025-05-21T21:51:46.089-04:00  WARN 86852 --- [FinManApp] [           main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-05-21T21:51:46.099-04:00  INFO 86852 --- [FinManApp] [           main] eAuthenticationProviderManagerConfigurer : Global AuthenticationManager configured with AuthenticationProvider bean with name jwtAuthenticationProvider
{"@timestamp":"2025-05-21T21:51:46.099882-04:00","@version":"1","message":"Global AuthenticationManager configured with AuthenticationProvider bean with name jwtAuthenticationProvider","logger_name":"org.springframework.security.config.annotation.authentication.configuration.InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer","thread_name":"main","level":"INFO","level_value":20000}
2025-05-21T21:51:46.100-04:00  WARN 86852 --- [FinManApp] [           main] r$InitializeUserDetailsManagerConfigurer : Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used by Spring Security for automatically configuring username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider. If the current configuration is intentional, to turn off this warning, increase the logging level of 'org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer' to ERROR
{"@timestamp":"2025-05-21T21:51:46.100113-04:00","@version":"1","message":"Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used by Spring Security for automatically configuring username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider. If the current configuration is intentional, to turn off this warning, increase the logging level of 'org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer' to ERROR","logger_name":"org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2025-05-21T21:51:46.180925-04:00","@version":"1","message":"73 mappings in 'requestMappingHandlerMapping'","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping","thread_name":"main","level":"DEBUG","level_value":10000}
2025-05-21T21:51:46.180-04:00 DEBUG 86852 --- [FinManApp] [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : 73 mappings in 'requestMappingHandlerMapping'
{"@timestamp":"2025-05-21T21:51:46.239164-04:00","@version":"1","message":"Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'","logger_name":"org.springframework.web.servlet.handler.SimpleUrlHandlerMapping","thread_name":"main","level":"DEBUG","level_value":10000}
2025-05-21T21:51:46.239-04:00 DEBUG 86852 --- [FinManApp] [           main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'
{"@timestamp":"2025-05-21T21:51:46.273521-04:00","@version":"1","message":"Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, JwtFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter","logger_name":"org.springframework.security.web.DefaultSecurityFilterChain","thread_name":"main","level":"DEBUG","level_value":10000}
2025-05-21T21:51:46.273-04:00 DEBUG 86852 --- [FinManApp] [           main] o.s.s.web.DefaultSecurityFilterChain     : Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, JwtFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
{"@timestamp":"2025-05-21T21:51:46.326651-04:00","@version":"1","message":"ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter","thread_name":"main","level":"DEBUG","level_value":10000}
2025-05-21T21:51:46.326-04:00 DEBUG 86852 --- [FinManApp] [           main] s.w.s.m.m.a.RequestMappingHandlerAdapter : ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
{"@timestamp":"2025-05-21T21:51:46.353475-04:00","@version":"1","message":"ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice","logger_name":"org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver","thread_name":"main","level":"DEBUG","level_value":10000}
2025-05-21T21:51:46.353-04:00 DEBUG 86852 --- [FinManApp] [           main] .m.m.a.ExceptionHandlerExceptionResolver : ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
{"@timestamp":"2025-05-21T21:51:46.434532-04:00","@version":"1","message":"Using default implementation for ThreadExecutor","logger_name":"org.quartz.impl.StdSchedulerFactory","thread_name":"main","level":"INFO","level_value":20000}
2025-05-21T21:51:46.434-04:00  INFO 86852 --- [FinManApp] [           main] org.quartz.impl.StdSchedulerFactory      : Using default implementation for ThreadExecutor
{"@timestamp":"2025-05-21T21:51:46.438327-04:00","@version":"1","message":"Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl","logger_name":"org.quartz.core.SchedulerSignalerImpl","thread_name":"main","level":"INFO","level_value":20000}
2025-05-21T21:51:46.438-04:00  INFO 86852 --- [FinManApp] [           main] org.quartz.core.SchedulerSignalerImpl    : Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2025-05-21T21:51:46.438-04:00  INFO 86852 --- [FinManApp] [           main] org.quartz.core.QuartzScheduler          : Quartz Scheduler v.2.3.2 created.
{"@timestamp":"2025-05-21T21:51:46.43841-04:00","@version":"1","message":"Quartz Scheduler v.2.3.2 created.","logger_name":"org.quartz.core.QuartzScheduler","thread_name":"main","level":"INFO","level_value":20000}
2025-05-21T21:51:46.438-04:00  INFO 86852 --- [FinManApp] [           main] org.quartz.simpl.RAMJobStore             : RAMJobStore initialized.
{"@timestamp":"2025-05-21T21:51:46.438617-04:00","@version":"1","message":"RAMJobStore initialized.","logger_name":"org.quartz.simpl.RAMJobStore","thread_name":"main","level":"INFO","level_value":20000}
2025-05-21T21:51:46.438-04:00  INFO 86852 --- [FinManApp] [           main] org.quartz.core.QuartzScheduler          : Scheduler meta-data: Quartz Scheduler (v2.3.2) 'quartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

{"@timestamp":"2025-05-21T21:51:46.438829-04:00","@version":"1","message":"Scheduler meta-data: Quartz Scheduler (v2.3.2) 'quartzScheduler' with instanceId 'NON_CLUSTERED'\n  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.\n  NOT STARTED.\n  Currently in standby mode.\n  Number of jobs executed: 0\n  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.\n  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.\n","logger_name":"org.quartz.core.QuartzScheduler","thread_name":"main","level":"INFO","level_value":20000}
2025-05-21T21:51:46.438-04:00  INFO 86852 --- [FinManApp] [           main] org.quartz.impl.StdSchedulerFactory      : Quartz scheduler 'quartzScheduler' initialized from an externally provided properties instance.
{"@timestamp":"2025-05-21T21:51:46.438863-04:00","@version":"1","message":"Quartz scheduler 'quartzScheduler' initialized from an externally provided properties instance.","logger_name":"org.quartz.impl.StdSchedulerFactory","thread_name":"main","level":"INFO","level_value":20000}
2025-05-21T21:51:46.438-04:00  INFO 86852 --- [FinManApp] [           main] org.quartz.impl.StdSchedulerFactory      : Quartz scheduler version: 2.3.2
{"@timestamp":"2025-05-21T21:51:46.43889-04:00","@version":"1","message":"Quartz scheduler version: 2.3.2","logger_name":"org.quartz.impl.StdSchedulerFactory","thread_name":"main","level":"INFO","level_value":20000}
2025-05-21T21:51:46.438-04:00  INFO 86852 --- [FinManApp] [           main] org.quartz.core.QuartzScheduler          : JobFactory set to: org.springframework.scheduling.quartz.SpringBeanJobFactory@7a77ff45
{"@timestamp":"2025-05-21T21:51:46.438931-04:00","@version":"1","message":"JobFactory set to: org.springframework.scheduling.quartz.SpringBeanJobFactory@7a77ff45","logger_name":"org.quartz.core.QuartzScheduler","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T21:51:46.467987-04:00","@version":"1","message":"Tomcat started on port 8080 (http) with context path '/'","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"main","level":"INFO","level_value":20000}
2025-05-21T21:51:46.467-04:00  INFO 86852 --- [FinManApp] [           main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path '/'
{"@timestamp":"2025-05-21T21:51:46.46845-04:00","@version":"1","message":"Starting Quartz Scheduler now","logger_name":"org.springframework.scheduling.quartz.SchedulerFactoryBean","thread_name":"main","level":"INFO","level_value":20000}
2025-05-21T21:51:46.468-04:00  INFO 86852 --- [FinManApp] [           main] o.s.s.quartz.SchedulerFactoryBean        : Starting Quartz Scheduler now
2025-05-21T21:51:46.468-04:00  INFO 86852 --- [FinManApp] [           main] org.quartz.core.QuartzScheduler          : Scheduler quartzScheduler_$_NON_CLUSTERED started.
{"@timestamp":"2025-05-21T21:51:46.468541-04:00","@version":"1","message":"Scheduler quartzScheduler_$_NON_CLUSTERED started.","logger_name":"org.quartz.core.QuartzScheduler","thread_name":"main","level":"INFO","level_value":20000}
2025-05-21T21:51:46.473-04:00  INFO 86852 --- [FinManApp] [           main] c.j.home.finmanapp.FinManAppApplication  : Started FinManAppApplication in 5.785 seconds (process running for 5.908)
{"@timestamp":"2025-05-21T21:51:46.473474-04:00","@version":"1","message":"Started FinManAppApplication in 5.785 seconds (process running for 5.908)","logger_name":"com.jay.home.finmanapp.FinManAppApplication","thread_name":"main","level":"INFO","level_value":20000}
Verifying PostgreSQL connection before starting application...
Checking if database 'finmanapp' exists...
Database 'finmanapp' already exists.
2025-05-21T21:51:46.548-04:00 DEBUG 86852 --- [FinManApp] [           main] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_demo,
        u1_0.last_name,
        u1_0.monthly_income,
        u1_0.password,
        u1_0.payday_day 
    from
        users u1_0 
    where
        u1_0.is_demo=?
{"@timestamp":"2025-05-21T21:51:46.548125-04:00","@version":"1","message":"\n    select\n        u1_0.id,\n        u1_0.email,\n        u1_0.first_name,\n        u1_0.is_demo,\n        u1_0.last_name,\n        u1_0.monthly_income,\n        u1_0.password,\n        u1_0.payday_day \n    from\n        users u1_0 \n    where\n        u1_0.is_demo=?","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
Hibernate: 
    select
        u1_0.id,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_demo,
        u1_0.last_name,
        u1_0.monthly_income,
        u1_0.password,
        u1_0.payday_day 
    from
        users u1_0 
    where
        u1_0.is_demo=?
Creating demo user account...
2025-05-21T21:51:46.639-04:00 DEBUG 86852 --- [FinManApp] [           main] org.hibernate.SQL                        : 
    insert 
    into
        users
        (email, first_name, is_demo, last_name, monthly_income, password, payday_day) 
    values
        (?, ?, ?, ?, ?, ?, ?)
{"@timestamp":"2025-05-21T21:51:46.639241-04:00","@version":"1","message":"\n    insert \n    into\n        users\n        (email, first_name, is_demo, last_name, monthly_income, password, payday_day) \n    values\n        (?, ?, ?, ?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
Hibernate: 
    insert 
    into
        users
        (email, first_name, is_demo, last_name, monthly_income, password, payday_day) 
    values
        (?, ?, ?, ?, ?, ?, ?)
Demo user created successfully.
{"@timestamp":"2025-05-21T21:51:46.650952-04:00","@version":"1","message":"\n    select\n        count(*) \n    from\n        users u1_0","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
2025-05-21T21:51:46.650-04:00 DEBUG 86852 --- [FinManApp] [           main] org.hibernate.SQL                        : 
    select
        count(*) 
    from
        users u1_0
Hibernate: 
    select
        count(*) 
    from
        users u1_0
Seeding database with initial data...
2025-05-21T21:51:46.652-04:00 DEBUG 86852 --- [FinManApp] [           main] org.hibernate.SQL                        : 
    select
        c1_0.id,
        c1_0.description,
        c1_0.icon_url,
        c1_0.name 
    from
        categories c1_0 
    where
        c1_0.name=?
Hibernate: 
    select
        c1_0.id,
        c1_0.description,
        c1_0.icon_url,
        c1_0.name 
    from
        categories c1_0 
    where
        c1_0.name=?
{"@timestamp":"2025-05-21T21:51:46.65241-04:00","@version":"1","message":"\n    select\n        c1_0.id,\n        c1_0.description,\n        c1_0.icon_url,\n        c1_0.name \n    from\n        categories c1_0 \n    where\n        c1_0.name=?","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
2025-05-21T21:51:46.654-04:00 DEBUG 86852 --- [FinManApp] [           main] org.hibernate.SQL                        : 
    select
        c1_0.id,
        c1_0.description,
        c1_0.icon_url,
        c1_0.name 
    from
        categories c1_0 
    where
        c1_0.name=?
{"@timestamp":"2025-05-21T21:51:46.654667-04:00","@version":"1","message":"\n    select\n        c1_0.id,\n        c1_0.description,\n        c1_0.icon_url,\n        c1_0.name \n    from\n        categories c1_0 \n    where\n        c1_0.name=?","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
Hibernate: 
    select
        c1_0.id,
        c1_0.description,
        c1_0.icon_url,
        c1_0.name 
    from
        categories c1_0 
    where
        c1_0.name=?
2025-05-21T21:51:46.655-04:00 DEBUG 86852 --- [FinManApp] [           main] org.hibernate.SQL                        : 
    select
        c1_0.id,
        c1_0.description,
        c1_0.icon_url,
        c1_0.name 
    from
        categories c1_0 
    where
        c1_0.name=?
{"@timestamp":"2025-05-21T21:51:46.655659-04:00","@version":"1","message":"\n    select\n        c1_0.id,\n        c1_0.description,\n        c1_0.icon_url,\n        c1_0.name \n    from\n        categories c1_0 \n    where\n        c1_0.name=?","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
Hibernate: 
    select
        c1_0.id,
        c1_0.description,
        c1_0.icon_url,
        c1_0.name 
    from
        categories c1_0 
    where
        c1_0.name=?
2025-05-21T21:51:46.656-04:00 DEBUG 86852 --- [FinManApp] [           main] org.hibernate.SQL                        : 
    select
        c1_0.id,
        c1_0.description,
        c1_0.icon_url,
        c1_0.name 
    from
        categories c1_0 
    where
        c1_0.name=?
Hibernate: 
    select
        c1_0.id,
        c1_0.description,
        c1_0.icon_url,
        c1_0.name 
    from
        categories c1_0 
    where
        c1_0.name=?
{"@timestamp":"2025-05-21T21:51:46.656572-04:00","@version":"1","message":"\n    select\n        c1_0.id,\n        c1_0.description,\n        c1_0.icon_url,\n        c1_0.name \n    from\n        categories c1_0 \n    where\n        c1_0.name=?","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
2025-05-21T21:51:46.657-04:00 DEBUG 86852 --- [FinManApp] [           main] org.hibernate.SQL                        : 
    select
        c1_0.id,
        c1_0.description,
        c1_0.icon_url,
        c1_0.name 
    from
        categories c1_0 
    where
        c1_0.name=?
{"@timestamp":"2025-05-21T21:51:46.657601-04:00","@version":"1","message":"\n    select\n        c1_0.id,\n        c1_0.description,\n        c1_0.icon_url,\n        c1_0.name \n    from\n        categories c1_0 \n    where\n        c1_0.name=?","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
Hibernate: 
    select
        c1_0.id,
        c1_0.description,
        c1_0.icon_url,
        c1_0.name 
    from
        categories c1_0 
    where
        c1_0.name=?
2025-05-21T21:51:46.658-04:00 DEBUG 86852 --- [FinManApp] [           main] org.hibernate.SQL                        : 
    select
        c1_0.id,
        c1_0.description,
        c1_0.icon_url,
        c1_0.name 
    from
        categories c1_0 
    where
        c1_0.name=?
{"@timestamp":"2025-05-21T21:51:46.658624-04:00","@version":"1","message":"\n    select\n        c1_0.id,\n        c1_0.description,\n        c1_0.icon_url,\n        c1_0.name \n    from\n        categories c1_0 \n    where\n        c1_0.name=?","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
Hibernate: 
    select
        c1_0.id,
        c1_0.description,
        c1_0.icon_url,
        c1_0.name 
    from
        categories c1_0 
    where
        c1_0.name=?
2025-05-21T21:51:46.659-04:00 DEBUG 86852 --- [FinManApp] [           main] org.hibernate.SQL                        : 
    select
        c1_0.id,
        c1_0.description,
        c1_0.icon_url,
        c1_0.name 
    from
        categories c1_0 
    where
        c1_0.name=?
{"@timestamp":"2025-05-21T21:51:46.659499-04:00","@version":"1","message":"\n    select\n        c1_0.id,\n        c1_0.description,\n        c1_0.icon_url,\n        c1_0.name \n    from\n        categories c1_0 \n    where\n        c1_0.name=?","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
Hibernate: 
    select
        c1_0.id,
        c1_0.description,
        c1_0.icon_url,
        c1_0.name 
    from
        categories c1_0 
    where
        c1_0.name=?
2025-05-21T21:51:46.660-04:00 DEBUG 86852 --- [FinManApp] [           main] org.hibernate.SQL                        : 
    select
        c1_0.id,
        c1_0.description,
        c1_0.icon_url,
        c1_0.name 
    from
        categories c1_0 
    where
        c1_0.name=?
{"@timestamp":"2025-05-21T21:51:46.660323-04:00","@version":"1","message":"\n    select\n        c1_0.id,\n        c1_0.description,\n        c1_0.icon_url,\n        c1_0.name \n    from\n        categories c1_0 \n    where\n        c1_0.name=?","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
Hibernate: 
    select
        c1_0.id,
        c1_0.description,
        c1_0.icon_url,
        c1_0.name 
    from
        categories c1_0 
    where
        c1_0.name=?
2025-05-21T21:51:46.661-04:00 DEBUG 86852 --- [FinManApp] [           main] org.hibernate.SQL                        : 
    select
        c1_0.id,
        c1_0.description,
        c1_0.icon_url,
        c1_0.name 
    from
        categories c1_0 
    where
        c1_0.name=?
Hibernate: 
    select
        c1_0.id,
        c1_0.description,
        c1_0.icon_url,
        c1_0.name 
    from
        categories c1_0 
    where
        c1_0.name=?
{"@timestamp":"2025-05-21T21:51:46.661186-04:00","@version":"1","message":"\n    select\n        c1_0.id,\n        c1_0.description,\n        c1_0.icon_url,\n        c1_0.name \n    from\n        categories c1_0 \n    where\n        c1_0.name=?","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
2025-05-21T21:51:46.662-04:00 DEBUG 86852 --- [FinManApp] [           main] org.hibernate.SQL                        : 
    select
        c1_0.id,
        c1_0.description,
        c1_0.icon_url,
        c1_0.name 
    from
        categories c1_0 
    where
        c1_0.name=?
Hibernate: 
    select
        c1_0.id,
        c1_0.description,
        c1_0.icon_url,
        c1_0.name 
    from
        categories c1_0 
    where
        c1_0.name=?
{"@timestamp":"2025-05-21T21:51:46.662056-04:00","@version":"1","message":"\n    select\n        c1_0.id,\n        c1_0.description,\n        c1_0.icon_url,\n        c1_0.name \n    from\n        categories c1_0 \n    where\n        c1_0.name=?","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
2025-05-21T21:51:46.662-04:00 DEBUG 86852 --- [FinManApp] [           main] org.hibernate.SQL                        : 
    select
        c1_0.id,
        c1_0.description,
        c1_0.icon_url,
        c1_0.name 
    from
        categories c1_0 
    where
        c1_0.name=?
Hibernate: 
    select
        c1_0.id,
        c1_0.description,
        c1_0.icon_url,
        c1_0.name 
    from
        categories c1_0 
    where
        c1_0.name=?
{"@timestamp":"2025-05-21T21:51:46.662902-04:00","@version":"1","message":"\n    select\n        c1_0.id,\n        c1_0.description,\n        c1_0.icon_url,\n        c1_0.name \n    from\n        categories c1_0 \n    where\n        c1_0.name=?","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
2025-05-21T21:51:46.663-04:00 DEBUG 86852 --- [FinManApp] [           main] org.hibernate.SQL                        : 
    select
        c1_0.id,
        c1_0.description,
        c1_0.icon_url,
        c1_0.name 
    from
        categories c1_0 
    where
        c1_0.name=?
{"@timestamp":"2025-05-21T21:51:46.663628-04:00","@version":"1","message":"\n    select\n        c1_0.id,\n        c1_0.description,\n        c1_0.icon_url,\n        c1_0.name \n    from\n        categories c1_0 \n    where\n        c1_0.name=?","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
Hibernate: 
    select
        c1_0.id,
        c1_0.description,
        c1_0.icon_url,
        c1_0.name 
    from
        categories c1_0 
    where
        c1_0.name=?
{"@timestamp":"2025-05-21T21:51:46.664377-04:00","@version":"1","message":"\n    select\n        c1_0.id,\n        c1_0.description,\n        c1_0.icon_url,\n        c1_0.name \n    from\n        categories c1_0 \n    where\n        c1_0.name=?","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
2025-05-21T21:51:46.664-04:00 DEBUG 86852 --- [FinManApp] [           main] org.hibernate.SQL                        : 
    select
        c1_0.id,
        c1_0.description,
        c1_0.icon_url,
        c1_0.name 
    from
        categories c1_0 
    where
        c1_0.name=?
Hibernate: 
    select
        c1_0.id,
        c1_0.description,
        c1_0.icon_url,
        c1_0.name 
    from
        categories c1_0 
    where
        c1_0.name=?
2025-05-21T21:51:46.665-04:00 DEBUG 86852 --- [FinManApp] [           main] org.hibernate.SQL                        : 
    select
        c1_0.id,
        c1_0.description,
        c1_0.icon_url,
        c1_0.name 
    from
        categories c1_0 
    where
        c1_0.name=?
{"@timestamp":"2025-05-21T21:51:46.665162-04:00","@version":"1","message":"\n    select\n        c1_0.id,\n        c1_0.description,\n        c1_0.icon_url,\n        c1_0.name \n    from\n        categories c1_0 \n    where\n        c1_0.name=?","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
Hibernate: 
    select
        c1_0.id,
        c1_0.description,
        c1_0.icon_url,
        c1_0.name 
    from
        categories c1_0 
    where
        c1_0.name=?
2025-05-21T21:51:46.666-04:00 DEBUG 86852 --- [FinManApp] [           main] org.hibernate.SQL                        : 
    select
        c1_0.id,
        c1_0.description,
        c1_0.icon_url,
        c1_0.name 
    from
        categories c1_0 
    where
        c1_0.name=?
Hibernate: 
    select
        c1_0.id,
        c1_0.description,
        c1_0.icon_url,
        c1_0.name 
    from
        categories c1_0 
    where
        c1_0.name=?
{"@timestamp":"2025-05-21T21:51:46.666004-04:00","@version":"1","message":"\n    select\n        c1_0.id,\n        c1_0.description,\n        c1_0.icon_url,\n        c1_0.name \n    from\n        categories c1_0 \n    where\n        c1_0.name=?","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
2025-05-21T21:51:46.666-04:00 DEBUG 86852 --- [FinManApp] [           main] org.hibernate.SQL                        : 
    select
        c1_0.id,
        c1_0.description,
        c1_0.icon_url,
        c1_0.name 
    from
        categories c1_0 
    where
        c1_0.name=?
Hibernate: 
    select
        c1_0.id,
        c1_0.description,
        c1_0.icon_url,
        c1_0.name 
    from
        categories c1_0 
    where
        c1_0.name=?
{"@timestamp":"2025-05-21T21:51:46.666798-04:00","@version":"1","message":"\n    select\n        c1_0.id,\n        c1_0.description,\n        c1_0.icon_url,\n        c1_0.name \n    from\n        categories c1_0 \n    where\n        c1_0.name=?","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
2025-05-21T21:51:46.667-04:00 DEBUG 86852 --- [FinManApp] [           main] org.hibernate.SQL                        : 
    select
        c1_0.id,
        c1_0.description,
        c1_0.icon_url,
        c1_0.name 
    from
        categories c1_0 
    where
        c1_0.name=?
Hibernate: 
    select
        c1_0.id,
        c1_0.description,
        c1_0.icon_url,
        c1_0.name 
    from
        categories c1_0 
    where
        c1_0.name=?
{"@timestamp":"2025-05-21T21:51:46.667561-04:00","@version":"1","message":"\n    select\n        c1_0.id,\n        c1_0.description,\n        c1_0.icon_url,\n        c1_0.name \n    from\n        categories c1_0 \n    where\n        c1_0.name=?","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
2025-05-21T21:51:46.668-04:00 DEBUG 86852 --- [FinManApp] [           main] org.hibernate.SQL                        : 
    select
        c1_0.id,
        c1_0.description,
        c1_0.icon_url,
        c1_0.name 
    from
        categories c1_0 
    where
        c1_0.name=?
{"@timestamp":"2025-05-21T21:51:46.668319-04:00","@version":"1","message":"\n    select\n        c1_0.id,\n        c1_0.description,\n        c1_0.icon_url,\n        c1_0.name \n    from\n        categories c1_0 \n    where\n        c1_0.name=?","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
Hibernate: 
    select
        c1_0.id,
        c1_0.description,
        c1_0.icon_url,
        c1_0.name 
    from
        categories c1_0 
    where
        c1_0.name=?
2025-05-21T21:51:46.669-04:00 DEBUG 86852 --- [FinManApp] [           main] org.hibernate.SQL                        : 
    insert 
    into
        categories
        (description, icon_url, name) 
    values
        (?, ?, ?)
{"@timestamp":"2025-05-21T21:51:46.669175-04:00","@version":"1","message":"\n    insert \n    into\n        categories\n        (description, icon_url, name) \n    values\n        (?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
Hibernate: 
    insert 
    into
        categories
        (description, icon_url, name) 
    values
        (?, ?, ?)
2025-05-21T21:51:46.670-04:00 DEBUG 86852 --- [FinManApp] [           main] org.hibernate.SQL                        : 
    insert 
    into
        categories
        (description, icon_url, name) 
    values
        (?, ?, ?)
Hibernate: 
    insert 
    into
        categories
        (description, icon_url, name) 
    values
        (?, ?, ?)
{"@timestamp":"2025-05-21T21:51:46.670552-04:00","@version":"1","message":"\n    insert \n    into\n        categories\n        (description, icon_url, name) \n    values\n        (?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
2025-05-21T21:51:46.671-04:00 DEBUG 86852 --- [FinManApp] [           main] org.hibernate.SQL                        : 
    insert 
    into
        categories
        (description, icon_url, name) 
    values
        (?, ?, ?)
{"@timestamp":"2025-05-21T21:51:46.671133-04:00","@version":"1","message":"\n    insert \n    into\n        categories\n        (description, icon_url, name) \n    values\n        (?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
Hibernate: 
    insert 
    into
        categories
        (description, icon_url, name) 
    values
        (?, ?, ?)
2025-05-21T21:51:46.671-04:00 DEBUG 86852 --- [FinManApp] [           main] org.hibernate.SQL                        : 
    insert 
    into
        categories
        (description, icon_url, name) 
    values
        (?, ?, ?)
Hibernate: 
    insert 
    into
        categories
        (description, icon_url, name) 
    values
        (?, ?, ?)
{"@timestamp":"2025-05-21T21:51:46.671662-04:00","@version":"1","message":"\n    insert \n    into\n        categories\n        (description, icon_url, name) \n    values\n        (?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
2025-05-21T21:51:46.672-04:00 DEBUG 86852 --- [FinManApp] [           main] org.hibernate.SQL                        : 
    insert 
    into
        categories
        (description, icon_url, name) 
    values
        (?, ?, ?)
Hibernate: 
    insert 
    into
        categories
        (description, icon_url, name) 
    values
        (?, ?, ?)
{"@timestamp":"2025-05-21T21:51:46.672166-04:00","@version":"1","message":"\n    insert \n    into\n        categories\n        (description, icon_url, name) \n    values\n        (?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
2025-05-21T21:51:46.672-04:00 DEBUG 86852 --- [FinManApp] [           main] org.hibernate.SQL                        : 
    insert 
    into
        categories
        (description, icon_url, name) 
    values
        (?, ?, ?)
Hibernate: 
    insert 
    into
        categories
        (description, icon_url, name) 
    values
        (?, ?, ?)
{"@timestamp":"2025-05-21T21:51:46.672767-04:00","@version":"1","message":"\n    insert \n    into\n        categories\n        (description, icon_url, name) \n    values\n        (?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
2025-05-21T21:51:46.673-04:00 DEBUG 86852 --- [FinManApp] [           main] org.hibernate.SQL                        : 
    insert 
    into
        categories
        (description, icon_url, name) 
    values
        (?, ?, ?)
{"@timestamp":"2025-05-21T21:51:46.673245-04:00","@version":"1","message":"\n    insert \n    into\n        categories\n        (description, icon_url, name) \n    values\n        (?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
Hibernate: 
    insert 
    into
        categories
        (description, icon_url, name) 
    values
        (?, ?, ?)
2025-05-21T21:51:46.673-04:00 DEBUG 86852 --- [FinManApp] [           main] org.hibernate.SQL                        : 
    insert 
    into
        categories
        (description, icon_url, name) 
    values
        (?, ?, ?)
Hibernate: 
    insert 
    into
        categories
        (description, icon_url, name) 
    values
        (?, ?, ?)
{"@timestamp":"2025-05-21T21:51:46.673714-04:00","@version":"1","message":"\n    insert \n    into\n        categories\n        (description, icon_url, name) \n    values\n        (?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
2025-05-21T21:51:46.674-04:00 DEBUG 86852 --- [FinManApp] [           main] org.hibernate.SQL                        : 
    insert 
    into
        categories
        (description, icon_url, name) 
    values
        (?, ?, ?)
Hibernate: 
    insert 
    into
        categories
        (description, icon_url, name) 
    values
        (?, ?, ?)
{"@timestamp":"2025-05-21T21:51:46.67424-04:00","@version":"1","message":"\n    insert \n    into\n        categories\n        (description, icon_url, name) \n    values\n        (?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
2025-05-21T21:51:46.674-04:00 DEBUG 86852 --- [FinManApp] [           main] org.hibernate.SQL                        : 
    insert 
    into
        categories
        (description, icon_url, name) 
    values
        (?, ?, ?)
Hibernate: 
    insert 
    into
        categories
        (description, icon_url, name) 
    values
        (?, ?, ?)
{"@timestamp":"2025-05-21T21:51:46.674726-04:00","@version":"1","message":"\n    insert \n    into\n        categories\n        (description, icon_url, name) \n    values\n        (?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
2025-05-21T21:51:46.675-04:00 DEBUG 86852 --- [FinManApp] [           main] org.hibernate.SQL                        : 
    insert 
    into
        categories
        (description, icon_url, name) 
    values
        (?, ?, ?)
{"@timestamp":"2025-05-21T21:51:46.675167-04:00","@version":"1","message":"\n    insert \n    into\n        categories\n        (description, icon_url, name) \n    values\n        (?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
Hibernate: 
    insert 
    into
        categories
        (description, icon_url, name) 
    values
        (?, ?, ?)
2025-05-21T21:51:46.675-04:00 DEBUG 86852 --- [FinManApp] [           main] org.hibernate.SQL                        : 
    insert 
    into
        categories
        (description, icon_url, name) 
    values
        (?, ?, ?)
Hibernate: 
    insert 
    into
        categories
        (description, icon_url, name) 
    values
        (?, ?, ?)
{"@timestamp":"2025-05-21T21:51:46.675627-04:00","@version":"1","message":"\n    insert \n    into\n        categories\n        (description, icon_url, name) \n    values\n        (?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-05-21T21:51:46.676116-04:00","@version":"1","message":"\n    insert \n    into\n        categories\n        (description, icon_url, name) \n    values\n        (?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
2025-05-21T21:51:46.676-04:00 DEBUG 86852 --- [FinManApp] [           main] org.hibernate.SQL                        : 
    insert 
    into
        categories
        (description, icon_url, name) 
    values
        (?, ?, ?)
Hibernate: 
    insert 
    into
        categories
        (description, icon_url, name) 
    values
        (?, ?, ?)
2025-05-21T21:51:46.676-04:00 DEBUG 86852 --- [FinManApp] [           main] org.hibernate.SQL                        : 
    insert 
    into
        categories
        (description, icon_url, name) 
    values
        (?, ?, ?)
Hibernate: 
    insert 
    into
        categories
        (description, icon_url, name) 
    values
        (?, ?, ?)
{"@timestamp":"2025-05-21T21:51:46.676571-04:00","@version":"1","message":"\n    insert \n    into\n        categories\n        (description, icon_url, name) \n    values\n        (?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
2025-05-21T21:51:46.677-04:00 DEBUG 86852 --- [FinManApp] [           main] org.hibernate.SQL                        : 
    insert 
    into
        categories
        (description, icon_url, name) 
    values
        (?, ?, ?)
Hibernate: 
    insert 
    into
        categories
        (description, icon_url, name) 
    values
        (?, ?, ?)
{"@timestamp":"2025-05-21T21:51:46.677001-04:00","@version":"1","message":"\n    insert \n    into\n        categories\n        (description, icon_url, name) \n    values\n        (?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
2025-05-21T21:51:46.677-04:00 DEBUG 86852 --- [FinManApp] [           main] org.hibernate.SQL                        : 
    insert 
    into
        categories
        (description, icon_url, name) 
    values
        (?, ?, ?)
Hibernate: 
    insert 
    into
        categories
        (description, icon_url, name) 
    values
        (?, ?, ?)
{"@timestamp":"2025-05-21T21:51:46.677418-04:00","@version":"1","message":"\n    insert \n    into\n        categories\n        (description, icon_url, name) \n    values\n        (?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
2025-05-21T21:51:46.677-04:00 DEBUG 86852 --- [FinManApp] [           main] org.hibernate.SQL                        : 
    insert 
    into
        categories
        (description, icon_url, name) 
    values
        (?, ?, ?)
Hibernate: 
    insert 
    into
        categories
        (description, icon_url, name) 
    values
        (?, ?, ?)
{"@timestamp":"2025-05-21T21:51:46.677829-04:00","@version":"1","message":"\n    insert \n    into\n        categories\n        (description, icon_url, name) \n    values\n        (?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
2025-05-21T21:51:46.678-04:00 DEBUG 86852 --- [FinManApp] [           main] org.hibernate.SQL                        : 
    insert 
    into
        categories
        (description, icon_url, name) 
    values
        (?, ?, ?)
{"@timestamp":"2025-05-21T21:51:46.678293-04:00","@version":"1","message":"\n    insert \n    into\n        categories\n        (description, icon_url, name) \n    values\n        (?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
Hibernate: 
    insert 
    into
        categories
        (description, icon_url, name) 
    values
        (?, ?, ?)
2025-05-21T21:51:46.679-04:00 DEBUG 86852 --- [FinManApp] [           main] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_demo,
        u1_0.last_name,
        u1_0.monthly_income,
        u1_0.password,
        u1_0.payday_day 
    from
        users u1_0 
    where
        u1_0.email=?
{"@timestamp":"2025-05-21T21:51:46.679727-04:00","@version":"1","message":"\n    select\n        u1_0.id,\n        u1_0.email,\n        u1_0.first_name,\n        u1_0.is_demo,\n        u1_0.last_name,\n        u1_0.monthly_income,\n        u1_0.password,\n        u1_0.payday_day \n    from\n        users u1_0 \n    where\n        u1_0.email=?","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
Hibernate: 
    select
        u1_0.id,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_demo,
        u1_0.last_name,
        u1_0.monthly_income,
        u1_0.password,
        u1_0.payday_day 
    from
        users u1_0 
    where
        u1_0.email=?
2025-05-21T21:51:46.747-04:00 DEBUG 86852 --- [FinManApp] [           main] org.hibernate.SQL                        : 
    insert 
    into
        users
        (email, first_name, is_demo, last_name, monthly_income, password, payday_day) 
    values
        (?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        users
        (email, first_name, is_demo, last_name, monthly_income, password, payday_day) 
    values
        (?, ?, ?, ?, ?, ?, ?)
{"@timestamp":"2025-05-21T21:51:46.747601-04:00","@version":"1","message":"\n    insert \n    into\n        users\n        (email, first_name, is_demo, last_name, monthly_income, password, payday_day) \n    values\n        (?, ?, ?, ?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
2025-05-21T21:51:46.749-04:00 DEBUG 86852 --- [FinManApp] [           main] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_demo,
        u1_0.last_name,
        u1_0.monthly_income,
        u1_0.password,
        u1_0.payday_day 
    from
        users u1_0 
    where
        u1_0.email=?
Hibernate: 
    select
        u1_0.id,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_demo,
        u1_0.last_name,
        u1_0.monthly_income,
        u1_0.password,
        u1_0.payday_day 
    from
        users u1_0 
    where
        u1_0.email=?
{"@timestamp":"2025-05-21T21:51:46.749591-04:00","@version":"1","message":"\n    select\n        u1_0.id,\n        u1_0.email,\n        u1_0.first_name,\n        u1_0.is_demo,\n        u1_0.last_name,\n        u1_0.monthly_income,\n        u1_0.password,\n        u1_0.payday_day \n    from\n        users u1_0 \n    where\n        u1_0.email=?","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
2025-05-21T21:51:46.817-04:00 DEBUG 86852 --- [FinManApp] [           main] org.hibernate.SQL                        : 
    insert 
    into
        users
        (email, first_name, is_demo, last_name, monthly_income, password, payday_day) 
    values
        (?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        users
        (email, first_name, is_demo, last_name, monthly_income, password, payday_day) 
    values
        (?, ?, ?, ?, ?, ?, ?)
{"@timestamp":"2025-05-21T21:51:46.817662-04:00","@version":"1","message":"\n    insert \n    into\n        users\n        (email, first_name, is_demo, last_name, monthly_income, password, payday_day) \n    values\n        (?, ?, ?, ?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
2025-05-21T21:51:46.819-04:00 DEBUG 86852 --- [FinManApp] [           main] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_demo,
        u1_0.last_name,
        u1_0.monthly_income,
        u1_0.password,
        u1_0.payday_day 
    from
        users u1_0 
    where
        u1_0.is_demo=?
Hibernate: 
    select
        u1_0.id,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_demo,
        u1_0.last_name,
        u1_0.monthly_income,
        u1_0.password,
        u1_0.payday_day 
    from
        users u1_0 
    where
        u1_0.is_demo=?
{"@timestamp":"2025-05-21T21:51:46.819487-04:00","@version":"1","message":"\n    select\n        u1_0.id,\n        u1_0.email,\n        u1_0.first_name,\n        u1_0.is_demo,\n        u1_0.last_name,\n        u1_0.monthly_income,\n        u1_0.password,\n        u1_0.payday_day \n    from\n        users u1_0 \n    where\n        u1_0.is_demo=?","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
2025-05-21T21:51:46.821-04:00 DEBUG 86852 --- [FinManApp] [           main] org.hibernate.SQL                        : 
    insert 
    into
        accounts
        (access_token, account_id, balance, institution_id, institution_name, last_synced, name, type, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        accounts
        (access_token, account_id, balance, institution_id, institution_name, last_synced, name, type, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?)
{"@timestamp":"2025-05-21T21:51:46.821611-04:00","@version":"1","message":"\n    insert \n    into\n        accounts\n        (access_token, account_id, balance, institution_id, institution_name, last_synced, name, type, user_id) \n    values\n        (?, ?, ?, ?, ?, ?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
2025-05-21T21:51:46.824-04:00 DEBUG 86852 --- [FinManApp] [           main] org.hibernate.SQL                        : 
    insert 
    into
        accounts
        (access_token, account_id, balance, institution_id, institution_name, last_synced, name, type, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        accounts
        (access_token, account_id, balance, institution_id, institution_name, last_synced, name, type, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?)
{"@timestamp":"2025-05-21T21:51:46.82447-04:00","@version":"1","message":"\n    insert \n    into\n        accounts\n        (access_token, account_id, balance, institution_id, institution_name, last_synced, name, type, user_id) \n    values\n        (?, ?, ?, ?, ?, ?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
2025-05-21T21:51:46.825-04:00 DEBUG 86852 --- [FinManApp] [           main] org.hibernate.SQL                        : 
    insert 
    into
        accounts
        (access_token, account_id, balance, institution_id, institution_name, last_synced, name, type, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?)
{"@timestamp":"2025-05-21T21:51:46.825806-04:00","@version":"1","message":"\n    insert \n    into\n        accounts\n        (access_token, account_id, balance, institution_id, institution_name, last_synced, name, type, user_id) \n    values\n        (?, ?, ?, ?, ?, ?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
Hibernate: 
    insert 
    into
        accounts
        (access_token, account_id, balance, institution_id, institution_name, last_synced, name, type, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-05-21T21:51:46.827-04:00 DEBUG 86852 --- [FinManApp] [           main] org.hibernate.SQL                        : 
    insert 
    into
        accounts
        (access_token, account_id, balance, institution_id, institution_name, last_synced, name, type, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        accounts
        (access_token, account_id, balance, institution_id, institution_name, last_synced, name, type, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?)
{"@timestamp":"2025-05-21T21:51:46.827212-04:00","@version":"1","message":"\n    insert \n    into\n        accounts\n        (access_token, account_id, balance, institution_id, institution_name, last_synced, name, type, user_id) \n    values\n        (?, ?, ?, ?, ?, ?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
2025-05-21T21:51:46.828-04:00 DEBUG 86852 --- [FinManApp] [           main] org.hibernate.SQL                        : 
    insert 
    into
        accounts
        (access_token, account_id, balance, institution_id, institution_name, last_synced, name, type, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?)
{"@timestamp":"2025-05-21T21:51:46.828706-04:00","@version":"1","message":"\n    insert \n    into\n        accounts\n        (access_token, account_id, balance, institution_id, institution_name, last_synced, name, type, user_id) \n    values\n        (?, ?, ?, ?, ?, ?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
Hibernate: 
    insert 
    into
        accounts
        (access_token, account_id, balance, institution_id, institution_name, last_synced, name, type, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-05-21T21:51:46.830-04:00 DEBUG 86852 --- [FinManApp] [           main] org.hibernate.SQL                        : 
    insert 
    into
        accounts
        (access_token, account_id, balance, institution_id, institution_name, last_synced, name, type, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?)
{"@timestamp":"2025-05-21T21:51:46.830454-04:00","@version":"1","message":"\n    insert \n    into\n        accounts\n        (access_token, account_id, balance, institution_id, institution_name, last_synced, name, type, user_id) \n    values\n        (?, ?, ?, ?, ?, ?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
Hibernate: 
    insert 
    into
        accounts
        (access_token, account_id, balance, institution_id, institution_name, last_synced, name, type, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-05-21T21:51:46.831-04:00 DEBUG 86852 --- [FinManApp] [           main] org.hibernate.SQL                        : 
    insert 
    into
        accounts
        (access_token, account_id, balance, institution_id, institution_name, last_synced, name, type, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        accounts
        (access_token, account_id, balance, institution_id, institution_name, last_synced, name, type, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?)
{"@timestamp":"2025-05-21T21:51:46.831393-04:00","@version":"1","message":"\n    insert \n    into\n        accounts\n        (access_token, account_id, balance, institution_id, institution_name, last_synced, name, type, user_id) \n    values\n        (?, ?, ?, ?, ?, ?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
2025-05-21T21:51:46.832-04:00 DEBUG 86852 --- [FinManApp] [           main] org.hibernate.SQL                        : 
    insert 
    into
        accounts
        (access_token, account_id, balance, institution_id, institution_name, last_synced, name, type, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?)
{"@timestamp":"2025-05-21T21:51:46.832317-04:00","@version":"1","message":"\n    insert \n    into\n        accounts\n        (access_token, account_id, balance, institution_id, institution_name, last_synced, name, type, user_id) \n    values\n        (?, ?, ?, ?, ?, ?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
Hibernate: 
    insert 
    into
        accounts
        (access_token, account_id, balance, institution_id, institution_name, last_synced, name, type, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-05-21T21:51:46.833-04:00 DEBUG 86852 --- [FinManApp] [           main] org.hibernate.SQL                        : 
    insert 
    into
        accounts
        (access_token, account_id, balance, institution_id, institution_name, last_synced, name, type, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?)
{"@timestamp":"2025-05-21T21:51:46.8332-04:00","@version":"1","message":"\n    insert \n    into\n        accounts\n        (access_token, account_id, balance, institution_id, institution_name, last_synced, name, type, user_id) \n    values\n        (?, ?, ?, ?, ?, ?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
Hibernate: 
    insert 
    into
        accounts
        (access_token, account_id, balance, institution_id, institution_name, last_synced, name, type, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-05-21T21:51:46.834-04:00 DEBUG 86852 --- [FinManApp] [           main] org.hibernate.SQL                        : 
    select
        c1_0.id,
        c1_0.description,
        c1_0.icon_url,
        c1_0.name 
    from
        categories c1_0 
    where
        c1_0.name=?
{"@timestamp":"2025-05-21T21:51:46.834469-04:00","@version":"1","message":"\n    select\n        c1_0.id,\n        c1_0.description,\n        c1_0.icon_url,\n        c1_0.name \n    from\n        categories c1_0 \n    where\n        c1_0.name=?","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
Hibernate: 
    select
        c1_0.id,
        c1_0.description,
        c1_0.icon_url,
        c1_0.name 
    from
        categories c1_0 
    where
        c1_0.name=?
2025-05-21T21:51:46.835-04:00 DEBUG 86852 --- [FinManApp] [           main] org.hibernate.SQL                        : 
    select
        c1_0.id,
        c1_0.description,
        c1_0.icon_url,
        c1_0.name 
    from
        categories c1_0 
    where
        c1_0.name=?
{"@timestamp":"2025-05-21T21:51:46.835201-04:00","@version":"1","message":"\n    select\n        c1_0.id,\n        c1_0.description,\n        c1_0.icon_url,\n        c1_0.name \n    from\n        categories c1_0 \n    where\n        c1_0.name=?","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
Hibernate: 
    select
        c1_0.id,
        c1_0.description,
        c1_0.icon_url,
        c1_0.name 
    from
        categories c1_0 
    where
        c1_0.name=?
2025-05-21T21:51:46.836-04:00 DEBUG 86852 --- [FinManApp] [           main] org.hibernate.SQL                        : 
    select
        c1_0.id,
        c1_0.description,
        c1_0.icon_url,
        c1_0.name 
    from
        categories c1_0 
    where
        c1_0.name=?
{"@timestamp":"2025-05-21T21:51:46.836015-04:00","@version":"1","message":"\n    select\n        c1_0.id,\n        c1_0.description,\n        c1_0.icon_url,\n        c1_0.name \n    from\n        categories c1_0 \n    where\n        c1_0.name=?","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
Hibernate: 
    select
        c1_0.id,
        c1_0.description,
        c1_0.icon_url,
        c1_0.name 
    from
        categories c1_0 
    where
        c1_0.name=?
2025-05-21T21:51:46.836-04:00 DEBUG 86852 --- [FinManApp] [           main] org.hibernate.SQL                        : 
    select
        c1_0.id,
        c1_0.description,
        c1_0.icon_url,
        c1_0.name 
    from
        categories c1_0 
    where
        c1_0.name=?
Hibernate: 
    select
        c1_0.id,
        c1_0.description,
        c1_0.icon_url,
        c1_0.name 
    from
        categories c1_0 
    where
        c1_0.name=?
{"@timestamp":"2025-05-21T21:51:46.836724-04:00","@version":"1","message":"\n    select\n        c1_0.id,\n        c1_0.description,\n        c1_0.icon_url,\n        c1_0.name \n    from\n        categories c1_0 \n    where\n        c1_0.name=?","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
2025-05-21T21:51:46.837-04:00 DEBUG 86852 --- [FinManApp] [           main] org.hibernate.SQL                        : 
    select
        c1_0.id,
        c1_0.description,
        c1_0.icon_url,
        c1_0.name 
    from
        categories c1_0 
    where
        c1_0.name=?
{"@timestamp":"2025-05-21T21:51:46.837409-04:00","@version":"1","message":"\n    select\n        c1_0.id,\n        c1_0.description,\n        c1_0.icon_url,\n        c1_0.name \n    from\n        categories c1_0 \n    where\n        c1_0.name=?","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
Hibernate: 
    select
        c1_0.id,
        c1_0.description,
        c1_0.icon_url,
        c1_0.name 
    from
        categories c1_0 
    where
        c1_0.name=?
2025-05-21T21:51:46.838-04:00 DEBUG 86852 --- [FinManApp] [           main] org.hibernate.SQL                        : 
    select
        c1_0.id,
        c1_0.description,
        c1_0.icon_url,
        c1_0.name 
    from
        categories c1_0 
    where
        c1_0.name=?
{"@timestamp":"2025-05-21T21:51:46.838101-04:00","@version":"1","message":"\n    select\n        c1_0.id,\n        c1_0.description,\n        c1_0.icon_url,\n        c1_0.name \n    from\n        categories c1_0 \n    where\n        c1_0.name=?","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
Hibernate: 
    select
        c1_0.id,
        c1_0.description,
        c1_0.icon_url,
        c1_0.name 
    from
        categories c1_0 
    where
        c1_0.name=?
2025-05-21T21:51:46.838-04:00 DEBUG 86852 --- [FinManApp] [           main] org.hibernate.SQL                        : 
    select
        c1_0.id,
        c1_0.description,
        c1_0.icon_url,
        c1_0.name 
    from
        categories c1_0 
    where
        c1_0.name=?
Hibernate: 
    select
        c1_0.id,
        c1_0.description,
        c1_0.icon_url,
        c1_0.name 
    from
        categories c1_0 
    where
        c1_0.name=?
{"@timestamp":"2025-05-21T21:51:46.838762-04:00","@version":"1","message":"\n    select\n        c1_0.id,\n        c1_0.description,\n        c1_0.icon_url,\n        c1_0.name \n    from\n        categories c1_0 \n    where\n        c1_0.name=?","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
2025-05-21T21:51:46.839-04:00 DEBUG 86852 --- [FinManApp] [           main] org.hibernate.SQL                        : 
    select
        c1_0.id,
        c1_0.description,
        c1_0.icon_url,
        c1_0.name 
    from
        categories c1_0 
    where
        c1_0.name=?
{"@timestamp":"2025-05-21T21:51:46.839422-04:00","@version":"1","message":"\n    select\n        c1_0.id,\n        c1_0.description,\n        c1_0.icon_url,\n        c1_0.name \n    from\n        categories c1_0 \n    where\n        c1_0.name=?","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
Hibernate: 
    select
        c1_0.id,
        c1_0.description,
        c1_0.icon_url,
        c1_0.name 
    from
        categories c1_0 
    where
        c1_0.name=?
2025-05-21T21:51:46.840-04:00 DEBUG 86852 --- [FinManApp] [           main] org.hibernate.SQL                        : 
    insert 
    into
        budgets
        (amount, category_id, end_date, name, period, start_date, user_id, warning_threshold) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        budgets
        (amount, category_id, end_date, name, period, start_date, user_id, warning_threshold) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?)
{"@timestamp":"2025-05-21T21:51:46.840205-04:00","@version":"1","message":"\n    insert \n    into\n        budgets\n        (amount, category_id, end_date, name, period, start_date, user_id, warning_threshold) \n    values\n        (?, ?, ?, ?, ?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
2025-05-21T21:51:46.842-04:00 DEBUG 86852 --- [FinManApp] [           main] org.hibernate.SQL                        : 
    insert 
    into
        budgets
        (amount, category_id, end_date, name, period, start_date, user_id, warning_threshold) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        budgets
        (amount, category_id, end_date, name, period, start_date, user_id, warning_threshold) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?)
{"@timestamp":"2025-05-21T21:51:46.842002-04:00","@version":"1","message":"\n    insert \n    into\n        budgets\n        (amount, category_id, end_date, name, period, start_date, user_id, warning_threshold) \n    values\n        (?, ?, ?, ?, ?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
2025-05-21T21:51:46.842-04:00 DEBUG 86852 --- [FinManApp] [           main] org.hibernate.SQL                        : 
    insert 
    into
        budgets
        (amount, category_id, end_date, name, period, start_date, user_id, warning_threshold) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        budgets
        (amount, category_id, end_date, name, period, start_date, user_id, warning_threshold) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?)
{"@timestamp":"2025-05-21T21:51:46.842986-04:00","@version":"1","message":"\n    insert \n    into\n        budgets\n        (amount, category_id, end_date, name, period, start_date, user_id, warning_threshold) \n    values\n        (?, ?, ?, ?, ?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
2025-05-21T21:51:46.843-04:00 DEBUG 86852 --- [FinManApp] [           main] org.hibernate.SQL                        : 
    insert 
    into
        budgets
        (amount, category_id, end_date, name, period, start_date, user_id, warning_threshold) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        budgets
        (amount, category_id, end_date, name, period, start_date, user_id, warning_threshold) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?)
{"@timestamp":"2025-05-21T21:51:46.843893-04:00","@version":"1","message":"\n    insert \n    into\n        budgets\n        (amount, category_id, end_date, name, period, start_date, user_id, warning_threshold) \n    values\n        (?, ?, ?, ?, ?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
2025-05-21T21:51:46.844-04:00 DEBUG 86852 --- [FinManApp] [           main] org.hibernate.SQL                        : 
    insert 
    into
        budgets
        (amount, category_id, end_date, name, period, start_date, user_id, warning_threshold) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        budgets
        (amount, category_id, end_date, name, period, start_date, user_id, warning_threshold) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?)
{"@timestamp":"2025-05-21T21:51:46.844812-04:00","@version":"1","message":"\n    insert \n    into\n        budgets\n        (amount, category_id, end_date, name, period, start_date, user_id, warning_threshold) \n    values\n        (?, ?, ?, ?, ?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
2025-05-21T21:51:46.845-04:00 DEBUG 86852 --- [FinManApp] [           main] org.hibernate.SQL                        : 
    insert 
    into
        budgets
        (amount, category_id, end_date, name, period, start_date, user_id, warning_threshold) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        budgets
        (amount, category_id, end_date, name, period, start_date, user_id, warning_threshold) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?)
{"@timestamp":"2025-05-21T21:51:46.845762-04:00","@version":"1","message":"\n    insert \n    into\n        budgets\n        (amount, category_id, end_date, name, period, start_date, user_id, warning_threshold) \n    values\n        (?, ?, ?, ?, ?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
2025-05-21T21:51:46.846-04:00 DEBUG 86852 --- [FinManApp] [           main] org.hibernate.SQL                        : 
    insert 
    into
        budgets
        (amount, category_id, end_date, name, period, start_date, user_id, warning_threshold) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        budgets
        (amount, category_id, end_date, name, period, start_date, user_id, warning_threshold) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?)
{"@timestamp":"2025-05-21T21:51:46.846763-04:00","@version":"1","message":"\n    insert \n    into\n        budgets\n        (amount, category_id, end_date, name, period, start_date, user_id, warning_threshold) \n    values\n        (?, ?, ?, ?, ?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
2025-05-21T21:51:46.847-04:00 DEBUG 86852 --- [FinManApp] [           main] org.hibernate.SQL                        : 
    insert 
    into
        budgets
        (amount, category_id, end_date, name, period, start_date, user_id, warning_threshold) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        budgets
        (amount, category_id, end_date, name, period, start_date, user_id, warning_threshold) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?)
{"@timestamp":"2025-05-21T21:51:46.847746-04:00","@version":"1","message":"\n    insert \n    into\n        budgets\n        (amount, category_id, end_date, name, period, start_date, user_id, warning_threshold) \n    values\n        (?, ?, ?, ?, ?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
2025-05-21T21:51:46.848-04:00 DEBUG 86852 --- [FinManApp] [           main] org.hibernate.SQL                        : 
    insert 
    into
        budgets
        (amount, category_id, end_date, name, period, start_date, user_id, warning_threshold) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?)
{"@timestamp":"2025-05-21T21:51:46.848843-04:00","@version":"1","message":"\n    insert \n    into\n        budgets\n        (amount, category_id, end_date, name, period, start_date, user_id, warning_threshold) \n    values\n        (?, ?, ?, ?, ?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
Hibernate: 
    insert 
    into
        budgets
        (amount, category_id, end_date, name, period, start_date, user_id, warning_threshold) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?)
2025-05-21T21:51:46.850-04:00 DEBUG 86852 --- [FinManApp] [           main] org.hibernate.SQL                        : 
    insert 
    into
        budgets
        (amount, category_id, end_date, name, period, start_date, user_id, warning_threshold) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?)
{"@timestamp":"2025-05-21T21:51:46.850042-04:00","@version":"1","message":"\n    insert \n    into\n        budgets\n        (amount, category_id, end_date, name, period, start_date, user_id, warning_threshold) \n    values\n        (?, ?, ?, ?, ?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
Hibernate: 
    insert 
    into
        budgets
        (amount, category_id, end_date, name, period, start_date, user_id, warning_threshold) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?)
2025-05-21T21:51:46.851-04:00 DEBUG 86852 --- [FinManApp] [           main] org.hibernate.SQL                        : 
    insert 
    into
        budgets
        (amount, category_id, end_date, name, period, start_date, user_id, warning_threshold) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        budgets
        (amount, category_id, end_date, name, period, start_date, user_id, warning_threshold) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?)
{"@timestamp":"2025-05-21T21:51:46.851015-04:00","@version":"1","message":"\n    insert \n    into\n        budgets\n        (amount, category_id, end_date, name, period, start_date, user_id, warning_threshold) \n    values\n        (?, ?, ?, ?, ?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
2025-05-21T21:51:46.852-04:00 DEBUG 86852 --- [FinManApp] [           main] org.hibernate.SQL                        : 
    insert 
    into
        budgets
        (amount, category_id, end_date, name, period, start_date, user_id, warning_threshold) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        budgets
        (amount, category_id, end_date, name, period, start_date, user_id, warning_threshold) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?)
{"@timestamp":"2025-05-21T21:51:46.852117-04:00","@version":"1","message":"\n    insert \n    into\n        budgets\n        (amount, category_id, end_date, name, period, start_date, user_id, warning_threshold) \n    values\n        (?, ?, ?, ?, ?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
2025-05-21T21:51:46.853-04:00 DEBUG 86852 --- [FinManApp] [           main] org.hibernate.SQL                        : 
    insert 
    into
        budgets
        (amount, category_id, end_date, name, period, start_date, user_id, warning_threshold) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        budgets
        (amount, category_id, end_date, name, period, start_date, user_id, warning_threshold) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?)
{"@timestamp":"2025-05-21T21:51:46.853848-04:00","@version":"1","message":"\n    insert \n    into\n        budgets\n        (amount, category_id, end_date, name, period, start_date, user_id, warning_threshold) \n    values\n        (?, ?, ?, ?, ?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
2025-05-21T21:51:46.855-04:00 DEBUG 86852 --- [FinManApp] [           main] org.hibernate.SQL                        : 
    insert 
    into
        budgets
        (amount, category_id, end_date, name, period, start_date, user_id, warning_threshold) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        budgets
        (amount, category_id, end_date, name, period, start_date, user_id, warning_threshold) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?)
{"@timestamp":"2025-05-21T21:51:46.855756-04:00","@version":"1","message":"\n    insert \n    into\n        budgets\n        (amount, category_id, end_date, name, period, start_date, user_id, warning_threshold) \n    values\n        (?, ?, ?, ?, ?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
2025-05-21T21:51:46.857-04:00 DEBUG 86852 --- [FinManApp] [           main] org.hibernate.SQL                        : 
    insert 
    into
        budgets
        (amount, category_id, end_date, name, period, start_date, user_id, warning_threshold) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        budgets
        (amount, category_id, end_date, name, period, start_date, user_id, warning_threshold) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?)
{"@timestamp":"2025-05-21T21:51:46.857415-04:00","@version":"1","message":"\n    insert \n    into\n        budgets\n        (amount, category_id, end_date, name, period, start_date, user_id, warning_threshold) \n    values\n        (?, ?, ?, ?, ?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
2025-05-21T21:51:46.859-04:00 DEBUG 86852 --- [FinManApp] [           main] org.hibernate.SQL                        : 
    insert 
    into
        transactions
        (account_id, amount, category_id, date, description, is_manual_entry, transaction_id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        transactions
        (account_id, amount, category_id, date, description, is_manual_entry, transaction_id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
{"@timestamp":"2025-05-21T21:51:46.859054-04:00","@version":"1","message":"\n    insert \n    into\n        transactions\n        (account_id, amount, category_id, date, description, is_manual_entry, transaction_id) \n    values\n        (?, ?, ?, ?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
2025-05-21T21:51:46.864-04:00 DEBUG 86852 --- [FinManApp] [           main] org.hibernate.SQL                        : 
    insert 
    into
        transactions
        (account_id, amount, category_id, date, description, is_manual_entry, transaction_id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        transactions
        (account_id, amount, category_id, date, description, is_manual_entry, transaction_id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
{"@timestamp":"2025-05-21T21:51:46.864932-04:00","@version":"1","message":"\n    insert \n    into\n        transactions\n        (account_id, amount, category_id, date, description, is_manual_entry, transaction_id) \n    values\n        (?, ?, ?, ?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
2025-05-21T21:51:46.866-04:00 DEBUG 86852 --- [FinManApp] [           main] org.hibernate.SQL                        : 
    insert 
    into
        transactions
        (account_id, amount, category_id, date, description, is_manual_entry, transaction_id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
{"@timestamp":"2025-05-21T21:51:46.866742-04:00","@version":"1","message":"\n    insert \n    into\n        transactions\n        (account_id, amount, category_id, date, description, is_manual_entry, transaction_id) \n    values\n        (?, ?, ?, ?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
Hibernate: 
    insert 
    into
        transactions
        (account_id, amount, category_id, date, description, is_manual_entry, transaction_id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
{"@timestamp":"2025-05-21T21:51:46.868437-04:00","@version":"1","message":"\n    insert \n    into\n        transactions\n        (account_id, amount, category_id, date, description, is_manual_entry, transaction_id) \n    values\n        (?, ?, ?, ?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
2025-05-21T21:51:46.868-04:00 DEBUG 86852 --- [FinManApp] [           main] org.hibernate.SQL                        : 
    insert 
    into
        transactions
        (account_id, amount, category_id, date, description, is_manual_entry, transaction_id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        transactions
        (account_id, amount, category_id, date, description, is_manual_entry, transaction_id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
{"@timestamp":"2025-05-21T21:51:46.870257-04:00","@version":"1","message":"\n    insert \n    into\n        transactions\n        (account_id, amount, category_id, date, description, is_manual_entry, transaction_id) \n    values\n        (?, ?, ?, ?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
2025-05-21T21:51:46.870-04:00 DEBUG 86852 --- [FinManApp] [           main] org.hibernate.SQL                        : 
    insert 
    into
        transactions
        (account_id, amount, category_id, date, description, is_manual_entry, transaction_id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        transactions
        (account_id, amount, category_id, date, description, is_manual_entry, transaction_id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
2025-05-21T21:51:46.871-04:00 DEBUG 86852 --- [FinManApp] [           main] org.hibernate.SQL                        : 
    insert 
    into
        transactions
        (account_id, amount, category_id, date, description, is_manual_entry, transaction_id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        transactions
        (account_id, amount, category_id, date, description, is_manual_entry, transaction_id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
{"@timestamp":"2025-05-21T21:51:46.871847-04:00","@version":"1","message":"\n    insert \n    into\n        transactions\n        (account_id, amount, category_id, date, description, is_manual_entry, transaction_id) \n    values\n        (?, ?, ?, ?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
2025-05-21T21:51:46.873-04:00 DEBUG 86852 --- [FinManApp] [           main] org.hibernate.SQL                        : 
    insert 
    into
        transactions
        (account_id, amount, category_id, date, description, is_manual_entry, transaction_id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        transactions
        (account_id, amount, category_id, date, description, is_manual_entry, transaction_id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
{"@timestamp":"2025-05-21T21:51:46.873448-04:00","@version":"1","message":"\n    insert \n    into\n        transactions\n        (account_id, amount, category_id, date, description, is_manual_entry, transaction_id) \n    values\n        (?, ?, ?, ?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
2025-05-21T21:51:46.874-04:00 DEBUG 86852 --- [FinManApp] [           main] org.hibernate.SQL                        : 
    insert 
    into
        transactions
        (account_id, amount, category_id, date, description, is_manual_entry, transaction_id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        transactions
        (account_id, amount, category_id, date, description, is_manual_entry, transaction_id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
{"@timestamp":"2025-05-21T21:51:46.874795-04:00","@version":"1","message":"\n    insert \n    into\n        transactions\n        (account_id, amount, category_id, date, description, is_manual_entry, transaction_id) \n    values\n        (?, ?, ?, ?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
2025-05-21T21:51:46.876-04:00 DEBUG 86852 --- [FinManApp] [           main] org.hibernate.SQL                        : 
    insert 
    into
        transactions
        (account_id, amount, category_id, date, description, is_manual_entry, transaction_id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        transactions
        (account_id, amount, category_id, date, description, is_manual_entry, transaction_id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
{"@timestamp":"2025-05-21T21:51:46.876376-04:00","@version":"1","message":"\n    insert \n    into\n        transactions\n        (account_id, amount, category_id, date, description, is_manual_entry, transaction_id) \n    values\n        (?, ?, ?, ?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
2025-05-21T21:51:46.877-04:00 DEBUG 86852 --- [FinManApp] [           main] org.hibernate.SQL                        : 
    insert 
    into
        transactions
        (account_id, amount, category_id, date, description, is_manual_entry, transaction_id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        transactions
        (account_id, amount, category_id, date, description, is_manual_entry, transaction_id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
{"@timestamp":"2025-05-21T21:51:46.877265-04:00","@version":"1","message":"\n    insert \n    into\n        transactions\n        (account_id, amount, category_id, date, description, is_manual_entry, transaction_id) \n    values\n        (?, ?, ?, ?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
2025-05-21T21:51:46.878-04:00 DEBUG 86852 --- [FinManApp] [           main] org.hibernate.SQL                        : 
    insert 
    into
        transactions
        (account_id, amount, category_id, date, description, is_manual_entry, transaction_id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        transactions
        (account_id, amount, category_id, date, description, is_manual_entry, transaction_id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
{"@timestamp":"2025-05-21T21:51:46.878622-04:00","@version":"1","message":"\n    insert \n    into\n        transactions\n        (account_id, amount, category_id, date, description, is_manual_entry, transaction_id) \n    values\n        (?, ?, ?, ?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-05-21T21:51:46.879726-04:00","@version":"1","message":"\n    insert \n    into\n        transactions\n        (account_id, amount, category_id, date, description, is_manual_entry, transaction_id) \n    values\n        (?, ?, ?, ?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
2025-05-21T21:51:46.879-04:00 DEBUG 86852 --- [FinManApp] [           main] org.hibernate.SQL                        : 
    insert 
    into
        transactions
        (account_id, amount, category_id, date, description, is_manual_entry, transaction_id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        transactions
        (account_id, amount, category_id, date, description, is_manual_entry, transaction_id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
2025-05-21T21:51:46.880-04:00 DEBUG 86852 --- [FinManApp] [           main] org.hibernate.SQL                        : 
    insert 
    into
        transactions
        (account_id, amount, category_id, date, description, is_manual_entry, transaction_id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
{"@timestamp":"2025-05-21T21:51:46.880694-04:00","@version":"1","message":"\n    insert \n    into\n        transactions\n        (account_id, amount, category_id, date, description, is_manual_entry, transaction_id) \n    values\n        (?, ?, ?, ?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
Hibernate: 
    insert 
    into
        transactions
        (account_id, amount, category_id, date, description, is_manual_entry, transaction_id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
2025-05-21T21:51:46.881-04:00 DEBUG 86852 --- [FinManApp] [           main] org.hibernate.SQL                        : 
    insert 
    into
        transactions
        (account_id, amount, category_id, date, description, is_manual_entry, transaction_id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        transactions
        (account_id, amount, category_id, date, description, is_manual_entry, transaction_id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
{"@timestamp":"2025-05-21T21:51:46.881872-04:00","@version":"1","message":"\n    insert \n    into\n        transactions\n        (account_id, amount, category_id, date, description, is_manual_entry, transaction_id) \n    values\n        (?, ?, ?, ?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
2025-05-21T21:51:46.882-04:00 DEBUG 86852 --- [FinManApp] [           main] org.hibernate.SQL                        : 
    insert 
    into
        transactions
        (account_id, amount, category_id, date, description, is_manual_entry, transaction_id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        transactions
        (account_id, amount, category_id, date, description, is_manual_entry, transaction_id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
{"@timestamp":"2025-05-21T21:51:46.882941-04:00","@version":"1","message":"\n    insert \n    into\n        transactions\n        (account_id, amount, category_id, date, description, is_manual_entry, transaction_id) \n    values\n        (?, ?, ?, ?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
2025-05-21T21:51:46.883-04:00 DEBUG 86852 --- [FinManApp] [           main] org.hibernate.SQL                        : 
    insert 
    into
        transactions
        (account_id, amount, category_id, date, description, is_manual_entry, transaction_id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        transactions
        (account_id, amount, category_id, date, description, is_manual_entry, transaction_id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
{"@timestamp":"2025-05-21T21:51:46.883973-04:00","@version":"1","message":"\n    insert \n    into\n        transactions\n        (account_id, amount, category_id, date, description, is_manual_entry, transaction_id) \n    values\n        (?, ?, ?, ?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
2025-05-21T21:51:46.884-04:00 DEBUG 86852 --- [FinManApp] [           main] org.hibernate.SQL                        : 
    insert 
    into
        transactions
        (account_id, amount, category_id, date, description, is_manual_entry, transaction_id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
{"@timestamp":"2025-05-21T21:51:46.884956-04:00","@version":"1","message":"\n    insert \n    into\n        transactions\n        (account_id, amount, category_id, date, description, is_manual_entry, transaction_id) \n    values\n        (?, ?, ?, ?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
Hibernate: 
    insert 
    into
        transactions
        (account_id, amount, category_id, date, description, is_manual_entry, transaction_id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
2025-05-21T21:51:46.885-04:00 DEBUG 86852 --- [FinManApp] [           main] org.hibernate.SQL                        : 
    insert 
    into
        transactions
        (account_id, amount, category_id, date, description, is_manual_entry, transaction_id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        transactions
        (account_id, amount, category_id, date, description, is_manual_entry, transaction_id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
{"@timestamp":"2025-05-21T21:51:46.885878-04:00","@version":"1","message":"\n    insert \n    into\n        transactions\n        (account_id, amount, category_id, date, description, is_manual_entry, transaction_id) \n    values\n        (?, ?, ?, ?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
2025-05-21T21:51:46.886-04:00 DEBUG 86852 --- [FinManApp] [           main] org.hibernate.SQL                        : 
    insert 
    into
        transactions
        (account_id, amount, category_id, date, description, is_manual_entry, transaction_id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        transactions
        (account_id, amount, category_id, date, description, is_manual_entry, transaction_id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
{"@timestamp":"2025-05-21T21:51:46.886813-04:00","@version":"1","message":"\n    insert \n    into\n        transactions\n        (account_id, amount, category_id, date, description, is_manual_entry, transaction_id) \n    values\n        (?, ?, ?, ?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
2025-05-21T21:51:46.887-04:00 DEBUG 86852 --- [FinManApp] [           main] org.hibernate.SQL                        : 
    insert 
    into
        transactions
        (account_id, amount, category_id, date, description, is_manual_entry, transaction_id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        transactions
        (account_id, amount, category_id, date, description, is_manual_entry, transaction_id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
{"@timestamp":"2025-05-21T21:51:46.887743-04:00","@version":"1","message":"\n    insert \n    into\n        transactions\n        (account_id, amount, category_id, date, description, is_manual_entry, transaction_id) \n    values\n        (?, ?, ?, ?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
2025-05-21T21:51:46.888-04:00 DEBUG 86852 --- [FinManApp] [           main] org.hibernate.SQL                        : 
    insert 
    into
        transactions
        (account_id, amount, category_id, date, description, is_manual_entry, transaction_id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        transactions
        (account_id, amount, category_id, date, description, is_manual_entry, transaction_id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
{"@timestamp":"2025-05-21T21:51:46.888792-04:00","@version":"1","message":"\n    insert \n    into\n        transactions\n        (account_id, amount, category_id, date, description, is_manual_entry, transaction_id) \n    values\n        (?, ?, ?, ?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
2025-05-21T21:51:46.889-04:00 DEBUG 86852 --- [FinManApp] [           main] org.hibernate.SQL                        : 
    insert 
    into
        transactions
        (account_id, amount, category_id, date, description, is_manual_entry, transaction_id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        transactions
        (account_id, amount, category_id, date, description, is_manual_entry, transaction_id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
{"@timestamp":"2025-05-21T21:51:46.889705-04:00","@version":"1","message":"\n    insert \n    into\n        transactions\n        (account_id, amount, category_id, date, description, is_manual_entry, transaction_id) \n    values\n        (?, ?, ?, ?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
2025-05-21T21:51:46.890-04:00 DEBUG 86852 --- [FinManApp] [           main] org.hibernate.SQL                        : 
    insert 
    into
        transactions
        (account_id, amount, category_id, date, description, is_manual_entry, transaction_id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        transactions
        (account_id, amount, category_id, date, description, is_manual_entry, transaction_id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
{"@timestamp":"2025-05-21T21:51:46.890651-04:00","@version":"1","message":"\n    insert \n    into\n        transactions\n        (account_id, amount, category_id, date, description, is_manual_entry, transaction_id) \n    values\n        (?, ?, ?, ?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
2025-05-21T21:51:46.891-04:00 DEBUG 86852 --- [FinManApp] [           main] org.hibernate.SQL                        : 
    insert 
    into
        transactions
        (account_id, amount, category_id, date, description, is_manual_entry, transaction_id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        transactions
        (account_id, amount, category_id, date, description, is_manual_entry, transaction_id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
{"@timestamp":"2025-05-21T21:51:46.891722-04:00","@version":"1","message":"\n    insert \n    into\n        transactions\n        (account_id, amount, category_id, date, description, is_manual_entry, transaction_id) \n    values\n        (?, ?, ?, ?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-05-21T21:51:46.892769-04:00","@version":"1","message":"\n    insert \n    into\n        transactions\n        (account_id, amount, category_id, date, description, is_manual_entry, transaction_id) \n    values\n        (?, ?, ?, ?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
2025-05-21T21:51:46.892-04:00 DEBUG 86852 --- [FinManApp] [           main] org.hibernate.SQL                        : 
    insert 
    into
        transactions
        (account_id, amount, category_id, date, description, is_manual_entry, transaction_id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        transactions
        (account_id, amount, category_id, date, description, is_manual_entry, transaction_id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
2025-05-21T21:51:46.893-04:00 DEBUG 86852 --- [FinManApp] [           main] org.hibernate.SQL                        : 
    insert 
    into
        transactions
        (account_id, amount, category_id, date, description, is_manual_entry, transaction_id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        transactions
        (account_id, amount, category_id, date, description, is_manual_entry, transaction_id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
{"@timestamp":"2025-05-21T21:51:46.893741-04:00","@version":"1","message":"\n    insert \n    into\n        transactions\n        (account_id, amount, category_id, date, description, is_manual_entry, transaction_id) \n    values\n        (?, ?, ?, ?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
2025-05-21T21:51:46.894-04:00 DEBUG 86852 --- [FinManApp] [           main] org.hibernate.SQL                        : 
    insert 
    into
        transactions
        (account_id, amount, category_id, date, description, is_manual_entry, transaction_id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
{"@timestamp":"2025-05-21T21:51:46.894663-04:00","@version":"1","message":"\n    insert \n    into\n        transactions\n        (account_id, amount, category_id, date, description, is_manual_entry, transaction_id) \n    values\n        (?, ?, ?, ?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
Hibernate: 
    insert 
    into
        transactions
        (account_id, amount, category_id, date, description, is_manual_entry, transaction_id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
2025-05-21T21:51:46.895-04:00 DEBUG 86852 --- [FinManApp] [           main] org.hibernate.SQL                        : 
    insert 
    into
        transactions
        (account_id, amount, category_id, date, description, is_manual_entry, transaction_id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        transactions
        (account_id, amount, category_id, date, description, is_manual_entry, transaction_id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
{"@timestamp":"2025-05-21T21:51:46.895612-04:00","@version":"1","message":"\n    insert \n    into\n        transactions\n        (account_id, amount, category_id, date, description, is_manual_entry, transaction_id) \n    values\n        (?, ?, ?, ?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
2025-05-21T21:51:46.896-04:00 DEBUG 86852 --- [FinManApp] [           main] org.hibernate.SQL                        : 
    insert 
    into
        transactions
        (account_id, amount, category_id, date, description, is_manual_entry, transaction_id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        transactions
        (account_id, amount, category_id, date, description, is_manual_entry, transaction_id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
{"@timestamp":"2025-05-21T21:51:46.896495-04:00","@version":"1","message":"\n    insert \n    into\n        transactions\n        (account_id, amount, category_id, date, description, is_manual_entry, transaction_id) \n    values\n        (?, ?, ?, ?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
2025-05-21T21:51:46.897-04:00 DEBUG 86852 --- [FinManApp] [           main] org.hibernate.SQL                        : 
    insert 
    into
        transactions
        (account_id, amount, category_id, date, description, is_manual_entry, transaction_id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
{"@timestamp":"2025-05-21T21:51:46.897414-04:00","@version":"1","message":"\n    insert \n    into\n        transactions\n        (account_id, amount, category_id, date, description, is_manual_entry, transaction_id) \n    values\n        (?, ?, ?, ?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
Hibernate: 
    insert 
    into
        transactions
        (account_id, amount, category_id, date, description, is_manual_entry, transaction_id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
2025-05-21T21:51:46.898-04:00 DEBUG 86852 --- [FinManApp] [           main] org.hibernate.SQL                        : 
    insert 
    into
        transactions
        (account_id, amount, category_id, date, description, is_manual_entry, transaction_id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        transactions
        (account_id, amount, category_id, date, description, is_manual_entry, transaction_id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
{"@timestamp":"2025-05-21T21:51:46.898318-04:00","@version":"1","message":"\n    insert \n    into\n        transactions\n        (account_id, amount, category_id, date, description, is_manual_entry, transaction_id) \n    values\n        (?, ?, ?, ?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
2025-05-21T21:51:46.899-04:00 DEBUG 86852 --- [FinManApp] [           main] org.hibernate.SQL                        : 
    insert 
    into
        transactions
        (account_id, amount, category_id, date, description, is_manual_entry, transaction_id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
{"@timestamp":"2025-05-21T21:51:46.899304-04:00","@version":"1","message":"\n    insert \n    into\n        transactions\n        (account_id, amount, category_id, date, description, is_manual_entry, transaction_id) \n    values\n        (?, ?, ?, ?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
Hibernate: 
    insert 
    into
        transactions
        (account_id, amount, category_id, date, description, is_manual_entry, transaction_id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
2025-05-21T21:51:46.900-04:00 DEBUG 86852 --- [FinManApp] [           main] org.hibernate.SQL                        : 
    insert 
    into
        transactions
        (account_id, amount, category_id, date, description, is_manual_entry, transaction_id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
{"@timestamp":"2025-05-21T21:51:46.900638-04:00","@version":"1","message":"\n    insert \n    into\n        transactions\n        (account_id, amount, category_id, date, description, is_manual_entry, transaction_id) \n    values\n        (?, ?, ?, ?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
Hibernate: 
    insert 
    into
        transactions
        (account_id, amount, category_id, date, description, is_manual_entry, transaction_id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
2025-05-21T21:51:46.901-04:00 DEBUG 86852 --- [FinManApp] [           main] org.hibernate.SQL                        : 
    insert 
    into
        transactions
        (account_id, amount, category_id, date, description, is_manual_entry, transaction_id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        transactions
        (account_id, amount, category_id, date, description, is_manual_entry, transaction_id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
{"@timestamp":"2025-05-21T21:51:46.901549-04:00","@version":"1","message":"\n    insert \n    into\n        transactions\n        (account_id, amount, category_id, date, description, is_manual_entry, transaction_id) \n    values\n        (?, ?, ?, ?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-05-21T21:51:46.902476-04:00","@version":"1","message":"\n    insert \n    into\n        transactions\n        (account_id, amount, category_id, date, description, is_manual_entry, transaction_id) \n    values\n        (?, ?, ?, ?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
2025-05-21T21:51:46.902-04:00 DEBUG 86852 --- [FinManApp] [           main] org.hibernate.SQL                        : 
    insert 
    into
        transactions
        (account_id, amount, category_id, date, description, is_manual_entry, transaction_id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        transactions
        (account_id, amount, category_id, date, description, is_manual_entry, transaction_id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
2025-05-21T21:51:46.903-04:00 DEBUG 86852 --- [FinManApp] [           main] org.hibernate.SQL                        : 
    insert 
    into
        transactions
        (account_id, amount, category_id, date, description, is_manual_entry, transaction_id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
{"@timestamp":"2025-05-21T21:51:46.90339-04:00","@version":"1","message":"\n    insert \n    into\n        transactions\n        (account_id, amount, category_id, date, description, is_manual_entry, transaction_id) \n    values\n        (?, ?, ?, ?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
Hibernate: 
    insert 
    into
        transactions
        (account_id, amount, category_id, date, description, is_manual_entry, transaction_id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
2025-05-21T21:51:46.904-04:00 DEBUG 86852 --- [FinManApp] [           main] org.hibernate.SQL                        : 
    insert 
    into
        bills
        (amount, auto_pay, category_id, description, due_day, is_paid, is_recurring, name, recurring_period, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        bills
        (amount, auto_pay, category_id, description, due_day, is_paid, is_recurring, name, recurring_period, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
{"@timestamp":"2025-05-21T21:51:46.904556-04:00","@version":"1","message":"\n    insert \n    into\n        bills\n        (amount, auto_pay, category_id, description, due_day, is_paid, is_recurring, name, recurring_period, user_id) \n    values\n        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
2025-05-21T21:51:46.906-04:00 DEBUG 86852 --- [FinManApp] [           main] org.hibernate.SQL                        : 
    insert 
    into
        bills
        (amount, auto_pay, category_id, description, due_day, is_paid, is_recurring, name, recurring_period, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        bills
        (amount, auto_pay, category_id, description, due_day, is_paid, is_recurring, name, recurring_period, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
{"@timestamp":"2025-05-21T21:51:46.906754-04:00","@version":"1","message":"\n    insert \n    into\n        bills\n        (amount, auto_pay, category_id, description, due_day, is_paid, is_recurring, name, recurring_period, user_id) \n    values\n        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
2025-05-21T21:51:46.907-04:00 DEBUG 86852 --- [FinManApp] [           main] org.hibernate.SQL                        : 
    insert 
    into
        bills
        (amount, auto_pay, category_id, description, due_day, is_paid, is_recurring, name, recurring_period, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        bills
        (amount, auto_pay, category_id, description, due_day, is_paid, is_recurring, name, recurring_period, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
{"@timestamp":"2025-05-21T21:51:46.907878-04:00","@version":"1","message":"\n    insert \n    into\n        bills\n        (amount, auto_pay, category_id, description, due_day, is_paid, is_recurring, name, recurring_period, user_id) \n    values\n        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-05-21T21:51:46.909029-04:00","@version":"1","message":"\n    insert \n    into\n        bills\n        (amount, auto_pay, category_id, description, due_day, is_paid, is_recurring, name, recurring_period, user_id) \n    values\n        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
2025-05-21T21:51:46.909-04:00 DEBUG 86852 --- [FinManApp] [           main] org.hibernate.SQL                        : 
    insert 
    into
        bills
        (amount, auto_pay, category_id, description, due_day, is_paid, is_recurring, name, recurring_period, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        bills
        (amount, auto_pay, category_id, description, due_day, is_paid, is_recurring, name, recurring_period, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-05-21T21:51:46.910-04:00 DEBUG 86852 --- [FinManApp] [           main] org.hibernate.SQL                        : 
    insert 
    into
        bills
        (amount, auto_pay, category_id, description, due_day, is_paid, is_recurring, name, recurring_period, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        bills
        (amount, auto_pay, category_id, description, due_day, is_paid, is_recurring, name, recurring_period, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
{"@timestamp":"2025-05-21T21:51:46.910131-04:00","@version":"1","message":"\n    insert \n    into\n        bills\n        (amount, auto_pay, category_id, description, due_day, is_paid, is_recurring, name, recurring_period, user_id) \n    values\n        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
2025-05-21T21:51:46.910-04:00 DEBUG 86852 --- [FinManApp] [           main] org.hibernate.SQL                        : 
    insert 
    into
        bills
        (amount, auto_pay, category_id, description, due_day, is_paid, is_recurring, name, recurring_period, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        bills
        (amount, auto_pay, category_id, description, due_day, is_paid, is_recurring, name, recurring_period, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
{"@timestamp":"2025-05-21T21:51:46.910939-04:00","@version":"1","message":"\n    insert \n    into\n        bills\n        (amount, auto_pay, category_id, description, due_day, is_paid, is_recurring, name, recurring_period, user_id) \n    values\n        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
2025-05-21T21:51:46.911-04:00 DEBUG 86852 --- [FinManApp] [           main] org.hibernate.SQL                        : 
    insert 
    into
        bills
        (amount, auto_pay, category_id, description, due_day, is_paid, is_recurring, name, recurring_period, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
{"@timestamp":"2025-05-21T21:51:46.911747-04:00","@version":"1","message":"\n    insert \n    into\n        bills\n        (amount, auto_pay, category_id, description, due_day, is_paid, is_recurring, name, recurring_period, user_id) \n    values\n        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
Hibernate: 
    insert 
    into
        bills
        (amount, auto_pay, category_id, description, due_day, is_paid, is_recurring, name, recurring_period, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-05-21T21:51:46.912-04:00 DEBUG 86852 --- [FinManApp] [           main] org.hibernate.SQL                        : 
    insert 
    into
        bills
        (amount, auto_pay, category_id, description, due_day, is_paid, is_recurring, name, recurring_period, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        bills
        (amount, auto_pay, category_id, description, due_day, is_paid, is_recurring, name, recurring_period, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
{"@timestamp":"2025-05-21T21:51:46.912756-04:00","@version":"1","message":"\n    insert \n    into\n        bills\n        (amount, auto_pay, category_id, description, due_day, is_paid, is_recurring, name, recurring_period, user_id) \n    values\n        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-05-21T21:51:46.913783-04:00","@version":"1","message":"\n    insert \n    into\n        bills\n        (amount, auto_pay, category_id, description, due_day, is_paid, is_recurring, name, recurring_period, user_id) \n    values\n        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
2025-05-21T21:51:46.913-04:00 DEBUG 86852 --- [FinManApp] [           main] org.hibernate.SQL                        : 
    insert 
    into
        bills
        (amount, auto_pay, category_id, description, due_day, is_paid, is_recurring, name, recurring_period, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        bills
        (amount, auto_pay, category_id, description, due_day, is_paid, is_recurring, name, recurring_period, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-05-21T21:51:46.914-04:00 DEBUG 86852 --- [FinManApp] [           main] org.hibernate.SQL                        : 
    insert 
    into
        bills
        (amount, auto_pay, category_id, description, due_day, is_paid, is_recurring, name, recurring_period, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        bills
        (amount, auto_pay, category_id, description, due_day, is_paid, is_recurring, name, recurring_period, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
{"@timestamp":"2025-05-21T21:51:46.914864-04:00","@version":"1","message":"\n    insert \n    into\n        bills\n        (amount, auto_pay, category_id, description, due_day, is_paid, is_recurring, name, recurring_period, user_id) \n    values\n        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
2025-05-21T21:51:46.915-04:00 DEBUG 86852 --- [FinManApp] [           main] org.hibernate.SQL                        : 
    insert 
    into
        bills
        (amount, auto_pay, category_id, description, due_day, is_paid, is_recurring, name, recurring_period, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
{"@timestamp":"2025-05-21T21:51:46.915786-04:00","@version":"1","message":"\n    insert \n    into\n        bills\n        (amount, auto_pay, category_id, description, due_day, is_paid, is_recurring, name, recurring_period, user_id) \n    values\n        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
Hibernate: 
    insert 
    into
        bills
        (amount, auto_pay, category_id, description, due_day, is_paid, is_recurring, name, recurring_period, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-05-21T21:51:46.916-04:00 DEBUG 86852 --- [FinManApp] [           main] org.hibernate.SQL                        : 
    insert 
    into
        bills
        (amount, auto_pay, category_id, description, due_day, is_paid, is_recurring, name, recurring_period, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        bills
        (amount, auto_pay, category_id, description, due_day, is_paid, is_recurring, name, recurring_period, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
{"@timestamp":"2025-05-21T21:51:46.916615-04:00","@version":"1","message":"\n    insert \n    into\n        bills\n        (amount, auto_pay, category_id, description, due_day, is_paid, is_recurring, name, recurring_period, user_id) \n    values\n        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
2025-05-21T21:51:46.917-04:00 DEBUG 86852 --- [FinManApp] [           main] org.hibernate.SQL                        : 
    insert 
    into
        bills
        (amount, auto_pay, category_id, description, due_day, is_paid, is_recurring, name, recurring_period, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        bills
        (amount, auto_pay, category_id, description, due_day, is_paid, is_recurring, name, recurring_period, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
{"@timestamp":"2025-05-21T21:51:46.917317-04:00","@version":"1","message":"\n    insert \n    into\n        bills\n        (amount, auto_pay, category_id, description, due_day, is_paid, is_recurring, name, recurring_period, user_id) \n    values\n        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
2025-05-21T21:51:46.917-04:00 DEBUG 86852 --- [FinManApp] [           main] org.hibernate.SQL                        : 
    insert 
    into
        bills
        (amount, auto_pay, category_id, description, due_day, is_paid, is_recurring, name, recurring_period, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        bills
        (amount, auto_pay, category_id, description, due_day, is_paid, is_recurring, name, recurring_period, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
{"@timestamp":"2025-05-21T21:51:46.917987-04:00","@version":"1","message":"\n    insert \n    into\n        bills\n        (amount, auto_pay, category_id, description, due_day, is_paid, is_recurring, name, recurring_period, user_id) \n    values\n        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
2025-05-21T21:51:46.918-04:00 DEBUG 86852 --- [FinManApp] [           main] org.hibernate.SQL                        : 
    insert 
    into
        bills
        (amount, auto_pay, category_id, description, due_day, is_paid, is_recurring, name, recurring_period, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
{"@timestamp":"2025-05-21T21:51:46.918695-04:00","@version":"1","message":"\n    insert \n    into\n        bills\n        (amount, auto_pay, category_id, description, due_day, is_paid, is_recurring, name, recurring_period, user_id) \n    values\n        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
Hibernate: 
    insert 
    into
        bills
        (amount, auto_pay, category_id, description, due_day, is_paid, is_recurring, name, recurring_period, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-05-21T21:51:46.919-04:00 DEBUG 86852 --- [FinManApp] [           main] org.hibernate.SQL                        : 
    insert 
    into
        bills
        (amount, auto_pay, category_id, description, due_day, is_paid, is_recurring, name, recurring_period, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
{"@timestamp":"2025-05-21T21:51:46.919404-04:00","@version":"1","message":"\n    insert \n    into\n        bills\n        (amount, auto_pay, category_id, description, due_day, is_paid, is_recurring, name, recurring_period, user_id) \n    values\n        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
Hibernate: 
    insert 
    into
        bills
        (amount, auto_pay, category_id, description, due_day, is_paid, is_recurring, name, recurring_period, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-05-21T21:51:46.920-04:00 DEBUG 86852 --- [FinManApp] [           main] org.hibernate.SQL                        : 
    insert 
    into
        bills
        (amount, auto_pay, category_id, description, due_day, is_paid, is_recurring, name, recurring_period, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        bills
        (amount, auto_pay, category_id, description, due_day, is_paid, is_recurring, name, recurring_period, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
{"@timestamp":"2025-05-21T21:51:46.920292-04:00","@version":"1","message":"\n    insert \n    into\n        bills\n        (amount, auto_pay, category_id, description, due_day, is_paid, is_recurring, name, recurring_period, user_id) \n    values\n        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
2025-05-21T21:51:46.920-04:00 DEBUG 86852 --- [FinManApp] [           main] org.hibernate.SQL                        : 
    insert 
    into
        bills
        (amount, auto_pay, category_id, description, due_day, is_paid, is_recurring, name, recurring_period, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        bills
        (amount, auto_pay, category_id, description, due_day, is_paid, is_recurring, name, recurring_period, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
{"@timestamp":"2025-05-21T21:51:46.920951-04:00","@version":"1","message":"\n    insert \n    into\n        bills\n        (amount, auto_pay, category_id, description, due_day, is_paid, is_recurring, name, recurring_period, user_id) \n    values\n        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
2025-05-21T21:51:46.921-04:00 DEBUG 86852 --- [FinManApp] [           main] org.hibernate.SQL                        : 
    insert 
    into
        bills
        (amount, auto_pay, category_id, description, due_day, is_paid, is_recurring, name, recurring_period, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        bills
        (amount, auto_pay, category_id, description, due_day, is_paid, is_recurring, name, recurring_period, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
{"@timestamp":"2025-05-21T21:51:46.921611-04:00","@version":"1","message":"\n    insert \n    into\n        bills\n        (amount, auto_pay, category_id, description, due_day, is_paid, is_recurring, name, recurring_period, user_id) \n    values\n        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
2025-05-21T21:51:46.922-04:00 DEBUG 86852 --- [FinManApp] [           main] org.hibernate.SQL                        : 
    insert 
    into
        bills
        (amount, auto_pay, category_id, description, due_day, is_paid, is_recurring, name, recurring_period, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        bills
        (amount, auto_pay, category_id, description, due_day, is_paid, is_recurring, name, recurring_period, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
{"@timestamp":"2025-05-21T21:51:46.9223-04:00","@version":"1","message":"\n    insert \n    into\n        bills\n        (amount, auto_pay, category_id, description, due_day, is_paid, is_recurring, name, recurring_period, user_id) \n    values\n        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
Database seeding completed successfully.
2025-05-21T21:51:46.923-04:00  INFO 86852 --- [FinManApp] [           main] c.j.h.finmanapp.config.DatabaseConfig    : Connected to PostgreSQL database
{"@timestamp":"2025-05-21T21:51:46.923071-04:00","@version":"1","message":"Connected to PostgreSQL database","logger_name":"com.jay.home.finmanapp.config.DatabaseConfig","thread_name":"main","level":"INFO","level_value":20000}
2025-05-21T21:51:46.927-04:00  INFO 86852 --- [FinManApp] [           main] c.j.h.finmanapp.config.DatabaseConfig    : PostgreSQL schema exists and is accessible.
{"@timestamp":"2025-05-21T21:51:46.927127-04:00","@version":"1","message":"PostgreSQL schema exists and is accessible.","logger_name":"com.jay.home.finmanapp.config.DatabaseConfig","thread_name":"main","level":"INFO","level_value":20000}
2025-05-21T21:51:46.927-04:00  INFO 86852 --- [FinManApp] [           main] c.j.h.finmanapp.config.DatabaseConfig    : Ensuring demo user exists...
{"@timestamp":"2025-05-21T21:51:46.927166-04:00","@version":"1","message":"Ensuring demo user exists...","logger_name":"com.jay.home.finmanapp.config.DatabaseConfig","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T21:51:46.92806-04:00","@version":"1","message":"Demo user already exists by email","logger_name":"com.jay.home.finmanapp.service.UserService","thread_name":"main","level":"INFO","level_value":20000}
2025-05-21T21:51:46.928-04:00  INFO 86852 --- [FinManApp] [           main] c.j.home.finmanapp.service.UserService   : Demo user already exists by email
2025-05-21T21:51:46.936-04:00  INFO 86852 --- [FinManApp] [           main] c.j.home.finmanapp.service.UserService   : Updated demo user to set is_demo flag
{"@timestamp":"2025-05-21T21:51:46.9366-04:00","@version":"1","message":"Updated demo user to set is_demo flag","logger_name":"com.jay.home.finmanapp.service.UserService","thread_name":"main","level":"INFO","level_value":20000}
2025-05-21T21:51:46.936-04:00  INFO 86852 --- [FinManApp] [           main] c.j.h.finmanapp.config.DatabaseConfig    : Demo user successfully created or verified via JDBC
{"@timestamp":"2025-05-21T21:51:46.936645-04:00","@version":"1","message":"Demo user successfully created or verified via JDBC","logger_name":"com.jay.home.finmanapp.config.DatabaseConfig","thread_name":"main","level":"INFO","level_value":20000}
2025-05-21T21:51:46.936-04:00  INFO 86852 --- [FinManApp] [           main] c.j.h.finmanapp.config.DatabaseConfig    : Initializing demo data...
{"@timestamp":"2025-05-21T21:51:46.936668-04:00","@version":"1","message":"Initializing demo data...","logger_name":"com.jay.home.finmanapp.config.DatabaseConfig","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T21:51:46.937112-04:00","@version":"1","message":"Demo user already exists by email","logger_name":"com.jay.home.finmanapp.service.UserService","thread_name":"main","level":"INFO","level_value":20000}
2025-05-21T21:51:46.937-04:00  INFO 86852 --- [FinManApp] [           main] c.j.home.finmanapp.service.UserService   : Demo user already exists by email
2025-05-21T21:51:46.939-04:00  INFO 86852 --- [FinManApp] [           main] c.j.home.finmanapp.service.UserService   : Updated demo user to set is_demo flag
{"@timestamp":"2025-05-21T21:51:46.939879-04:00","@version":"1","message":"Updated demo user to set is_demo flag","logger_name":"com.jay.home.finmanapp.service.UserService","thread_name":"main","level":"INFO","level_value":20000}
2025-05-21T21:51:46.941-04:00 DEBUG 86852 --- [FinManApp] [           main] org.hibernate.SQL                        : 
    select
        a1_0.id,
        a1_0.access_token,
        a1_0.account_id,
        a1_0.balance,
        a1_0.institution_id,
        a1_0.institution_name,
        a1_0.last_synced,
        a1_0.name,
        a1_0.type,
        a1_0.user_id 
    from
        accounts a1_0 
    where
        a1_0.user_id=?
{"@timestamp":"2025-05-21T21:51:46.941651-04:00","@version":"1","message":"\n    select\n        a1_0.id,\n        a1_0.access_token,\n        a1_0.account_id,\n        a1_0.balance,\n        a1_0.institution_id,\n        a1_0.institution_name,\n        a1_0.last_synced,\n        a1_0.name,\n        a1_0.type,\n        a1_0.user_id \n    from\n        accounts a1_0 \n    where\n        a1_0.user_id=?","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
Hibernate: 
    select
        a1_0.id,
        a1_0.access_token,
        a1_0.account_id,
        a1_0.balance,
        a1_0.institution_id,
        a1_0.institution_name,
        a1_0.last_synced,
        a1_0.name,
        a1_0.type,
        a1_0.user_id 
    from
        accounts a1_0 
    where
        a1_0.user_id=?
{"@timestamp":"2025-05-21T21:51:46.944452-04:00","@version":"1","message":"Demo user already has 4 accounts. Skipping data initialization","logger_name":"com.jay.home.finmanapp.service.DemoDataService","thread_name":"main","level":"INFO","level_value":20000}
2025-05-21T21:51:46.944-04:00  INFO 86852 --- [FinManApp] [           main] c.j.h.finmanapp.service.DemoDataService  : Demo user already has 4 accounts. Skipping data initialization
2025-05-21T21:51:46.944-04:00  INFO 86852 --- [FinManApp] [           main] c.j.h.finmanapp.config.DatabaseConfig    : Demo data successfully initialized
{"@timestamp":"2025-05-21T21:51:46.94494-04:00","@version":"1","message":"Demo data successfully initialized","logger_name":"com.jay.home.finmanapp.config.DatabaseConfig","thread_name":"main","level":"INFO","level_value":20000}
2025-05-21T21:52:20.226-04:00  INFO 86852 --- [FinManApp] [nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
{"@timestamp":"2025-05-21T21:52:20.226129-04:00","@version":"1","message":"Initializing Spring DispatcherServlet 'dispatcherServlet'","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread_name":"http-nio-8080-exec-1","level":"INFO","level_value":20000}
2025-05-21T21:52:20.226-04:00  INFO 86852 --- [FinManApp] [nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
{"@timestamp":"2025-05-21T21:52:20.226555-04:00","@version":"1","message":"Initializing Servlet 'dispatcherServlet'","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"http-nio-8080-exec-1","level":"INFO","level_value":20000}
2025-05-21T21:52:20.226-04:00 DEBUG 86852 --- [FinManApp] [nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Detected StandardServletMultipartResolver
{"@timestamp":"2025-05-21T21:52:20.226775-04:00","@version":"1","message":"Detected StandardServletMultipartResolver","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"http-nio-8080-exec-1","level":"DEBUG","level_value":10000}
2025-05-21T21:52:20.226-04:00 DEBUG 86852 --- [FinManApp] [nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Detected AcceptHeaderLocaleResolver
{"@timestamp":"2025-05-21T21:52:20.226853-04:00","@version":"1","message":"Detected AcceptHeaderLocaleResolver","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"http-nio-8080-exec-1","level":"DEBUG","level_value":10000}
2025-05-21T21:52:20.226-04:00 DEBUG 86852 --- [FinManApp] [nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Detected FixedThemeResolver
{"@timestamp":"2025-05-21T21:52:20.226905-04:00","@version":"1","message":"Detected FixedThemeResolver","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"http-nio-8080-exec-1","level":"DEBUG","level_value":10000}
2025-05-21T21:52:20.228-04:00 DEBUG 86852 --- [FinManApp] [nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@1d2035c2
{"@timestamp":"2025-05-21T21:52:20.228838-04:00","@version":"1","message":"Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@1d2035c2","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"http-nio-8080-exec-1","level":"DEBUG","level_value":10000}
2025-05-21T21:52:20.229-04:00 DEBUG 86852 --- [FinManApp] [nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Detected org.springframework.web.servlet.support.SessionFlashMapManager@3026d4cd
{"@timestamp":"2025-05-21T21:52:20.229044-04:00","@version":"1","message":"Detected org.springframework.web.servlet.support.SessionFlashMapManager@3026d4cd","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"http-nio-8080-exec-1","level":"DEBUG","level_value":10000}
2025-05-21T21:52:20.229-04:00 DEBUG 86852 --- [FinManApp] [nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
{"@timestamp":"2025-05-21T21:52:20.229341-04:00","@version":"1","message":"enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"http-nio-8080-exec-1","level":"DEBUG","level_value":10000}
2025-05-21T21:52:20.229-04:00  INFO 86852 --- [FinManApp] [nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 3 ms
{"@timestamp":"2025-05-21T21:52:20.229428-04:00","@version":"1","message":"Completed initialization in 3 ms","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"http-nio-8080-exec-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-05-21T21:52:20.237678-04:00","@version":"1","message":"Securing HEAD /","logger_name":"org.springframework.security.web.FilterChainProxy","thread_name":"http-nio-8080-exec-1","level":"DEBUG","level_value":10000}
2025-05-21T21:52:20.237-04:00 DEBUG 86852 --- [FinManApp] [nio-8080-exec-1] o.s.security.web.FilterChainProxy        : Securing HEAD /
2025-05-21T21:52:20.240-04:00 DEBUG 86852 --- [FinManApp] [nio-8080-exec-1] c.jay.home.finmanapp.security.JwtFilter  : Authorization header not present
{"@timestamp":"2025-05-21T21:52:20.240409-04:00","@version":"1","message":"Authorization header not present","logger_name":"com.jay.home.finmanapp.security.JwtFilter","thread_name":"http-nio-8080-exec-1","level":"DEBUG","level_value":10000}
2025-05-21T21:52:20.240-04:00 DEBUG 86852 --- [FinManApp] [nio-8080-exec-1] c.jay.home.finmanapp.security.JwtFilter  : No valid JWT token found in request
{"@timestamp":"2025-05-21T21:52:20.240484-04:00","@version":"1","message":"No valid JWT token found in request","logger_name":"com.jay.home.finmanapp.security.JwtFilter","thread_name":"http-nio-8080-exec-1","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-05-21T21:52:20.24148-04:00","@version":"1","message":"Set SecurityContextHolder to anonymous SecurityContext","logger_name":"org.springframework.security.web.authentication.AnonymousAuthenticationFilter","thread_name":"http-nio-8080-exec-1","level":"DEBUG","level_value":10000}
2025-05-21T21:52:20.241-04:00 DEBUG 86852 --- [FinManApp] [nio-8080-exec-1] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-05-21T21:52:39.071-04:00 DEBUG 86852 --- [FinManApp] [nio-8080-exec-2] o.s.security.web.FilterChainProxy        : Securing HEAD /h2-console
{"@timestamp":"2025-05-21T21:52:39.07186-04:00","@version":"1","message":"Securing HEAD /h2-console","logger_name":"org.springframework.security.web.FilterChainProxy","thread_name":"http-nio-8080-exec-2","level":"DEBUG","level_value":10000}
2025-05-21T21:52:39.072-04:00 DEBUG 86852 --- [FinManApp] [nio-8080-exec-2] c.jay.home.finmanapp.security.JwtFilter  : Authorization header not present
{"@timestamp":"2025-05-21T21:52:39.072075-04:00","@version":"1","message":"Authorization header not present","logger_name":"com.jay.home.finmanapp.security.JwtFilter","thread_name":"http-nio-8080-exec-2","level":"DEBUG","level_value":10000}
2025-05-21T21:52:39.072-04:00 DEBUG 86852 --- [FinManApp] [nio-8080-exec-2] c.jay.home.finmanapp.security.JwtFilter  : No valid JWT token found in request
{"@timestamp":"2025-05-21T21:52:39.072124-04:00","@version":"1","message":"No valid JWT token found in request","logger_name":"com.jay.home.finmanapp.security.JwtFilter","thread_name":"http-nio-8080-exec-2","level":"DEBUG","level_value":10000}
2025-05-21T21:52:39.072-04:00 DEBUG 86852 --- [FinManApp] [nio-8080-exec-2] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
{"@timestamp":"2025-05-21T21:52:39.072186-04:00","@version":"1","message":"Set SecurityContextHolder to anonymous SecurityContext","logger_name":"org.springframework.security.web.authentication.AnonymousAuthenticationFilter","thread_name":"http-nio-8080-exec-2","level":"DEBUG","level_value":10000}
2025-05-21T21:52:39.072-04:00 DEBUG 86852 --- [FinManApp] [nio-8080-exec-2] o.s.security.web.FilterChainProxy        : Secured HEAD /h2-console
{"@timestamp":"2025-05-21T21:52:39.072365-04:00","@version":"1","message":"Secured HEAD /h2-console","logger_name":"org.springframework.security.web.FilterChainProxy","thread_name":"http-nio-8080-exec-2","level":"DEBUG","level_value":10000}
2025-05-21T21:52:39.073-04:00 DEBUG 86852 --- [FinManApp] [nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : HEAD "/h2-console", parameters={}
{"@timestamp":"2025-05-21T21:52:39.073208-04:00","@version":"1","message":"HEAD \"/h2-console\", parameters={}","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"http-nio-8080-exec-2","level":"DEBUG","level_value":10000}
2025-05-21T21:52:39.074-04:00 DEBUG 86852 --- [FinManApp] [nio-8080-exec-2] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
{"@timestamp":"2025-05-21T21:52:39.074256-04:00","@version":"1","message":"Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]","logger_name":"org.springframework.web.servlet.handler.SimpleUrlHandlerMapping","thread_name":"http-nio-8080-exec-2","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-05-21T21:52:39.077091-04:00","@version":"1","message":"Resource not found","logger_name":"org.springframework.web.servlet.resource.ResourceHttpRequestHandler","thread_name":"http-nio-8080-exec-2","level":"DEBUG","level_value":10000}
2025-05-21T21:52:39.077-04:00 DEBUG 86852 --- [FinManApp] [nio-8080-exec-2] o.s.w.s.r.ResourceHttpRequestHandler     : Resource not found
{"@timestamp":"2025-05-21T21:52:39.079813-04:00","@version":"1","message":"Resolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource h2-console.]","logger_name":"org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver","thread_name":"http-nio-8080-exec-2","level":"DEBUG","level_value":10000}
2025-05-21T21:52:39.079-04:00 DEBUG 86852 --- [FinManApp] [nio-8080-exec-2] .w.s.m.s.DefaultHandlerExceptionResolver : Resolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource h2-console.]
{"@timestamp":"2025-05-21T21:52:39.080575-04:00","@version":"1","message":"Completed 404 NOT_FOUND","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"http-nio-8080-exec-2","level":"DEBUG","level_value":10000}
2025-05-21T21:52:39.080-04:00 DEBUG 86852 --- [FinManApp] [nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Completed 404 NOT_FOUND
{"@timestamp":"2025-05-21T21:52:39.083252-04:00","@version":"1","message":"Securing HEAD /error","logger_name":"org.springframework.security.web.FilterChainProxy","thread_name":"http-nio-8080-exec-2","level":"DEBUG","level_value":10000}
2025-05-21T21:52:39.083-04:00 DEBUG 86852 --- [FinManApp] [nio-8080-exec-2] o.s.security.web.FilterChainProxy        : Securing HEAD /error
2025-05-21T21:52:39.083-04:00 DEBUG 86852 --- [FinManApp] [nio-8080-exec-2] o.s.security.web.FilterChainProxy        : Secured HEAD /error
{"@timestamp":"2025-05-21T21:52:39.083389-04:00","@version":"1","message":"Secured HEAD /error","logger_name":"org.springframework.security.web.FilterChainProxy","thread_name":"http-nio-8080-exec-2","level":"DEBUG","level_value":10000}
2025-05-21T21:52:39.083-04:00 DEBUG 86852 --- [FinManApp] [nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : "ERROR" dispatch for HEAD "/error", parameters={}
{"@timestamp":"2025-05-21T21:52:39.083481-04:00","@version":"1","message":"\"ERROR\" dispatch for HEAD \"/error\", parameters={}","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"http-nio-8080-exec-2","level":"DEBUG","level_value":10000}
2025-05-21T21:52:39.083-04:00 DEBUG 86852 --- [FinManApp] [nio-8080-exec-2] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#error(HttpServletRequest)
{"@timestamp":"2025-05-21T21:52:39.083603-04:00","@version":"1","message":"Mapped to org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#error(HttpServletRequest)","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping","thread_name":"http-nio-8080-exec-2","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-05-21T21:52:39.091354-04:00","@version":"1","message":"Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]","logger_name":"org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor","thread_name":"http-nio-8080-exec-2","level":"DEBUG","level_value":10000}
2025-05-21T21:52:39.091-04:00 DEBUG 86852 --- [FinManApp] [nio-8080-exec-2] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-05-21T21:52:39.091-04:00 DEBUG 86852 --- [FinManApp] [nio-8080-exec-2] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [{timestamp=Wed May 21 21:52:39 EDT 2025, status=404, error=Not Found, path=/h2-console}]
{"@timestamp":"2025-05-21T21:52:39.091906-04:00","@version":"1","message":"Writing [{timestamp=Wed May 21 21:52:39 EDT 2025, status=404, error=Not Found, path=/h2-console}]","logger_name":"org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor","thread_name":"http-nio-8080-exec-2","level":"DEBUG","level_value":10000}
2025-05-21T21:52:39.102-04:00 DEBUG 86852 --- [FinManApp] [nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Exiting from "ERROR" dispatch, status 404
{"@timestamp":"2025-05-21T21:52:39.102707-04:00","@version":"1","message":"Exiting from \"ERROR\" dispatch, status 404","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"http-nio-8080-exec-2","level":"DEBUG","level_value":10000}
2025-05-21T21:52:39.102-04:00 DEBUG 86852 --- [FinManApp] [nio-8080-exec-2] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
{"@timestamp":"2025-05-21T21:52:39.102851-04:00","@version":"1","message":"Set SecurityContextHolder to anonymous SecurityContext","logger_name":"org.springframework.security.web.authentication.AnonymousAuthenticationFilter","thread_name":"http-nio-8080-exec-2","level":"DEBUG","level_value":10000}
2025-05-21T22:00:04.122-04:00 DEBUG 86852 --- [FinManApp] [   scheduling-1] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_demo,
        u1_0.last_name,
        u1_0.monthly_income,
        u1_0.password,
        u1_0.payday_day 
    from
        users u1_0
{"@timestamp":"2025-05-21T22:00:04.122724-04:00","@version":"1","message":"\n    select\n        u1_0.id,\n        u1_0.email,\n        u1_0.first_name,\n        u1_0.is_demo,\n        u1_0.last_name,\n        u1_0.monthly_income,\n        u1_0.password,\n        u1_0.payday_day \n    from\n        users u1_0","logger_name":"org.hibernate.SQL","thread_name":"scheduling-1","level":"DEBUG","level_value":10000}
Hibernate: 
    select
        u1_0.id,
        u1_0.email,
        u1_0.first_name,
        u1_0.is_demo,
        u1_0.last_name,
        u1_0.monthly_income,
        u1_0.password,
        u1_0.payday_day 
    from
        users u1_0
2025-05-21T22:00:04.132-04:00 DEBUG 86852 --- [FinManApp] [   scheduling-1] org.hibernate.SQL                        : 
    select
        b1_0.id,
        b1_0.amount,
        b1_0.category_id,
        b1_0.end_date,
        b1_0.name,
        b1_0.period,
        b1_0.start_date,
        b1_0.user_id,
        b1_0.warning_threshold 
    from
        budgets b1_0 
    where
        b1_0.user_id=? 
        and b1_0.start_date<=? 
        and b1_0.end_date>=?
Hibernate: 
    select
        b1_0.id,
        b1_0.amount,
        b1_0.category_id,
        b1_0.end_date,
        b1_0.name,
        b1_0.period,
        b1_0.start_date,
        b1_0.user_id,
        b1_0.warning_threshold 
    from
        budgets b1_0 
    where
        b1_0.user_id=? 
        and b1_0.start_date<=? 
        and b1_0.end_date>=?
{"@timestamp":"2025-05-21T22:00:04.132946-04:00","@version":"1","message":"\n    select\n        b1_0.id,\n        b1_0.amount,\n        b1_0.category_id,\n        b1_0.end_date,\n        b1_0.name,\n        b1_0.period,\n        b1_0.start_date,\n        b1_0.user_id,\n        b1_0.warning_threshold \n    from\n        budgets b1_0 \n    where\n        b1_0.user_id=? \n        and b1_0.start_date<=? \n        and b1_0.end_date>=?","logger_name":"org.hibernate.SQL","thread_name":"scheduling-1","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-05-21T22:00:04.139839-04:00","@version":"1","message":"Unexpected error occurred in scheduled task","logger_name":"org.springframework.scheduling.support.TaskUtils$LoggingErrorHandler","thread_name":"scheduling-1","level":"ERROR","level_value":40000,"stack_trace":"org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.jay.home.finmanapp.model.User.accounts: could not initialize proxy - no Session\n\tat org.hibernate.collection.spi.AbstractPersistentCollection.throwLazyInitializationException(AbstractPersistentCollection.java:635)\n\tat org.hibernate.collection.spi.AbstractPersistentCollection.withTemporarySessionIfNeeded(AbstractPersistentCollection.java:219)\n\tat org.hibernate.collection.spi.AbstractPersistentCollection.initialize(AbstractPersistentCollection.java:614)\n\tat org.hibernate.collection.spi.AbstractPersistentCollection.read(AbstractPersistentCollection.java:138)\n\tat org.hibernate.collection.spi.PersistentSet.iterator(PersistentSet.java:166)\n\tat java.base/java.util.Spliterators$IteratorSpliterator.estimateSize(Spliterators.java:1959)\n\tat java.base/java.util.Spliterator.getExactSizeIfKnown(Spliterator.java:414)\n\tat java.base/java.util.stream.AbstractPipeline.exactOutputSizeIfKnown(AbstractPipeline.java:470)\n\tat java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:574)\n\tat java.base/java.util.stream.AbstractPipeline.evaluateToArrayNode(AbstractPipeline.java:260)\n\tat java.base/java.util.stream.ReferencePipeline.toArray(ReferencePipeline.java:616)\n\tat java.base/java.util.stream.ReferencePipeline.toArray(ReferencePipeline.java:622)\n\tat java.base/java.util.stream.ReferencePipeline.toList(ReferencePipeline.java:627)\n\tat com.jay.home.finmanapp.service.BudgetService.checkBudgetThresholds(BudgetService.java:146)\n\tat java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:580)\n\tat org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)\n\tat org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)\n\tat org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)\n\tat org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:727)\n\tat com.jay.home.finmanapp.service.BudgetService$$SpringCGLIB$$0.checkBudgetThresholds(<generated>)\n\tat com.jay.home.finmanapp.config.SchedulingConfig.lambda$checkBudgetThresholds$0(SchedulingConfig.java:25)\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1596)\n\tat com.jay.home.finmanapp.config.SchedulingConfig.checkBudgetThresholds(SchedulingConfig.java:25)\n\tat java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:580)\n\tat org.springframework.scheduling.support.ScheduledMethodRunnable.runInternal(ScheduledMethodRunnable.java:130)\n\tat org.springframework.scheduling.support.ScheduledMethodRunnable.lambda$run$2(ScheduledMethodRunnable.java:124)\n\tat io.micrometer.observation.Observation.observe(Observation.java:498)\n\tat org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:124)\n\tat org.springframework.scheduling.config.Task$OutcomeTrackingRunnable.run(Task.java:85)\n\tat org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)\n\tat org.springframework.scheduling.concurrent.ReschedulingRunnable.run(ReschedulingRunnable.java:96)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)\n\tat java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)\n\tat java.base/java.lang.Thread.run(Thread.java:1583)\n"}
2025-05-21T22:00:04.139-04:00 ERROR 86852 --- [FinManApp] [   scheduling-1] o.s.s.s.TaskUtils$LoggingErrorHandler    : Unexpected error occurred in scheduled task

org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.jay.home.finmanapp.model.User.accounts: could not initialize proxy - no Session
	at org.hibernate.collection.spi.AbstractPersistentCollection.throwLazyInitializationException(AbstractPersistentCollection.java:635)
	at org.hibernate.collection.spi.AbstractPersistentCollection.withTemporarySessionIfNeeded(AbstractPersistentCollection.java:219)
	at org.hibernate.collection.spi.AbstractPersistentCollection.initialize(AbstractPersistentCollection.java:614)
	at org.hibernate.collection.spi.AbstractPersistentCollection.read(AbstractPersistentCollection.java:138)
	at org.hibernate.collection.spi.PersistentSet.iterator(PersistentSet.java:166)
	at java.base/java.util.Spliterators$IteratorSpliterator.estimateSize(Spliterators.java:1959)
	at java.base/java.util.Spliterator.getExactSizeIfKnown(Spliterator.java:414)
	at java.base/java.util.stream.AbstractPipeline.exactOutputSizeIfKnown(AbstractPipeline.java:470)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:574)
	at java.base/java.util.stream.AbstractPipeline.evaluateToArrayNode(AbstractPipeline.java:260)
	at java.base/java.util.stream.ReferencePipeline.toArray(ReferencePipeline.java:616)
	at java.base/java.util.stream.ReferencePipeline.toArray(ReferencePipeline.java:622)
	at java.base/java.util.stream.ReferencePipeline.toList(ReferencePipeline.java:627)
	at com.jay.home.finmanapp.service.BudgetService.checkBudgetThresholds(BudgetService.java:146)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:727)
	at com.jay.home.finmanapp.service.BudgetService$$SpringCGLIB$$0.checkBudgetThresholds(<generated>)
	at com.jay.home.finmanapp.config.SchedulingConfig.lambda$checkBudgetThresholds$0(SchedulingConfig.java:25)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at com.jay.home.finmanapp.config.SchedulingConfig.checkBudgetThresholds(SchedulingConfig.java:25)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.runInternal(ScheduledMethodRunnable.java:130)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.lambda$run$2(ScheduledMethodRunnable.java:124)
	at io.micrometer.observation.Observation.observe(Observation.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:124)
	at org.springframework.scheduling.config.Task$OutcomeTrackingRunnable.run(Task.java:85)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at org.springframework.scheduling.concurrent.ReschedulingRunnable.run(ReschedulingRunnable.java:96)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)

2025-05-21T22:08:35.690-04:00  WARN 86852 --- [FinManApp] [l-1 housekeeper] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=5m46s825ms).
{"@timestamp":"2025-05-21T22:08:35.690098-04:00","@version":"1","message":"HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=5m46s825ms).","logger_name":"com.zaxxer.hikari.pool.HikariPool","thread_name":"HikariPool-1 housekeeper","level":"WARN","level_value":30000}
2025-05-21T22:17:09.295-04:00  WARN 86852 --- [FinManApp] [l-1 housekeeper] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=8m33s607ms).
{"@timestamp":"2025-05-21T22:17:09.29581-04:00","@version":"1","message":"HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=8m33s607ms).","logger_name":"com.zaxxer.hikari.pool.HikariPool","thread_name":"HikariPool-1 housekeeper","level":"WARN","level_value":30000}
2025-05-21T22:21:07.408-04:00  WARN 86852 --- [FinManApp] [l-1 housekeeper] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=58s79ms).
{"@timestamp":"2025-05-21T22:21:07.408175-04:00","@version":"1","message":"HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=58s79ms).","logger_name":"com.zaxxer.hikari.pool.HikariPool","thread_name":"HikariPool-1 housekeeper","level":"WARN","level_value":30000}
2025-05-21T22:26:35.923-04:00  WARN 86852 --- [FinManApp] [l-1 housekeeper] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=1m58s476ms).
{"@timestamp":"2025-05-21T22:26:35.92337-04:00","@version":"1","message":"HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=1m58s476ms).","logger_name":"com.zaxxer.hikari.pool.HikariPool","thread_name":"HikariPool-1 housekeeper","level":"WARN","level_value":30000}
2025-05-21T22:44:09.275-04:00  WARN 86852 --- [FinManApp] [l-1 housekeeper] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=1m33s247ms).
{"@timestamp":"2025-05-21T22:44:09.275192-04:00","@version":"1","message":"HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=1m33s247ms).","logger_name":"com.zaxxer.hikari.pool.HikariPool","thread_name":"HikariPool-1 housekeeper","level":"WARN","level_value":30000}
